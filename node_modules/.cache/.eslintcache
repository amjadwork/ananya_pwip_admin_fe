[{"/Users/himanshudahiya/Desktop/export-costing-fe/src/index.tsx":"1","/Users/himanshudahiya/Desktop/export-costing-fe/src/reportWebVitals.ts":"2","/Users/himanshudahiya/Desktop/export-costing-fe/src/App.tsx":"3","/Users/himanshudahiya/Desktop/export-costing-fe/src/screens/dashboard/index.tsx":"4","/Users/himanshudahiya/Desktop/export-costing-fe/src/layouts/AppLayout.tsx":"5","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/SideNavBar/SideNavBar.tsx":"6","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Header/Header.tsx":"7","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Products/index.tsx":"8","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/index.tsx":"9","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Locations/index.tsx":"10","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Packaging/index.tsx":"11","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Playground/index.tsx":"12","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/header.constants.tsx":"13","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/sideNavBar.constants.tsx":"14","/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/sideNavBar.style.tsx":"15","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/var.constants.tsx":"16","/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/header.style.tsx":"17","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Wrappers/PageWrapper.tsx":"18","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Products/AddProductForm.tsx":"19","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Card/Card.tsx":"20","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/PageHeader/PageHeader.tsx":"21","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/EditProducts/EditProducts.tsx":"22","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Locations/EditLocationForm/index.tsx":"23","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Packaging/EditPackagingForm/index.tsx":"24","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Playground/ECForm/index.tsx":"25","/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/pageWrapper.style.tsx":"26","/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/pageHeader.style.tsx":"27","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/EditProducts/EditProductsForm.tsx":"28","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/eceForm.constants.tsx":"29","/Users/himanshudahiya/Desktop/export-costing-fe/src/screens/login/LoginForm.tsx":"30","/Users/himanshudahiya/Desktop/export-costing-fe/src/screens/login/Otp.tsx":"31","/Users/himanshudahiya/Desktop/export-costing-fe/src/hoc/withAuth.js":"32"},{"size":841,"mtime":1670238488127,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1660564126000,"results":"35","hashOfConfig":"34"},{"size":649,"mtime":1670223388233,"results":"36","hashOfConfig":"34"},{"size":219,"mtime":1669804199556,"results":"37","hashOfConfig":"34"},{"size":3218,"mtime":1661945780296,"results":"38","hashOfConfig":"34"},{"size":4160,"mtime":1661456856607,"results":"39","hashOfConfig":"34"},{"size":2541,"mtime":1670392687233,"results":"40","hashOfConfig":"34"},{"size":2304,"mtime":1660596088000,"results":"41","hashOfConfig":"34"},{"size":7053,"mtime":1661544881959,"results":"42","hashOfConfig":"34"},{"size":6517,"mtime":1660780599000,"results":"43","hashOfConfig":"34"},{"size":6766,"mtime":1660780602000,"results":"44","hashOfConfig":"34"},{"size":1952,"mtime":1667831499736,"results":"45","hashOfConfig":"34"},{"size":177,"mtime":1660566086000,"results":"46","hashOfConfig":"34"},{"size":514,"mtime":1660601929000,"results":"47","hashOfConfig":"34"},{"size":1060,"mtime":1660561947000,"results":"48","hashOfConfig":"34"},{"size":3092,"mtime":1660775560000,"results":"49","hashOfConfig":"34"},{"size":813,"mtime":1660561947000,"results":"50","hashOfConfig":"34"},{"size":1599,"mtime":1669368794372,"results":"51","hashOfConfig":"34"},{"size":3784,"mtime":1661525790944,"results":"52","hashOfConfig":"34"},{"size":1268,"mtime":1660571540000,"results":"53","hashOfConfig":"34"},{"size":2134,"mtime":1660597768000,"results":"54","hashOfConfig":"34"},{"size":8296,"mtime":1661545178879,"results":"55","hashOfConfig":"34"},{"size":2822,"mtime":1661690127844,"results":"56","hashOfConfig":"34"},{"size":2263,"mtime":1661639629533,"results":"57","hashOfConfig":"34"},{"size":7290,"mtime":1670293075681,"results":"58","hashOfConfig":"34"},{"size":226,"mtime":1660561947000,"results":"59","hashOfConfig":"34"},{"size":252,"mtime":1660597490000,"results":"60","hashOfConfig":"34"},{"size":3444,"mtime":1661531987744,"results":"61","hashOfConfig":"34"},{"size":7331,"mtime":1667973040049,"results":"62","hashOfConfig":"34"},{"size":3891,"mtime":1670392141938,"results":"63","hashOfConfig":"34"},{"size":6097,"mtime":1670394881759,"results":"64","hashOfConfig":"34"},{"size":1570,"mtime":1670223421814,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v95qcr",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"72"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},"/Users/himanshudahiya/Desktop/export-costing-fe/src/index.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/reportWebVitals.ts",[],[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/App.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/screens/dashboard/index.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/layouts/AppLayout.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/components/SideNavBar/SideNavBar.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Header/Header.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Products/index.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/index.tsx",["177","178"],[],"import React from \"react\";\nimport {\n  SimpleGrid,\n  Box,\n  ActionIcon,\n  Group,\n  Popover,\n  Text,\n  Button,\n  Space,\n  Title,\n  Badge,\n  Card as SectionCard,\n  List,\n  ScrollArea,\n} from \"@mantine/core\";\nimport { Pencil, X, Check } from \"tabler-icons-react\";\n\nimport EditProductsContainer from \"./EditProducts/EditProducts\";\n\nimport PageWrapper from \"../../components/Wrappers/PageWrapper\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\n\nimport { riceCategory } from \"../../constants/var.constants\";\n\nconst RenderPageHeader = (props: any) => {\n  const activeFilter = props.activeFilter;\n  const handleRadioChange = props.handleRadioChange;\n\n  return (\n    <PageHeader\n      title=\"Manage Products\"\n      breadcrumbs={[\n        { title: \"Products\", href: \"/admin/dashboard/products\" },\n        { title: \"Manage\", href: \"#\" },\n      ]}\n    />\n  );\n};\n\nconst RenderPageAction = (props: any) => {\n  const handleSaveAction = props.handleSaveAction;\n  const handleEditAction = props.handleEditAction;\n  const editModeActive = props.editModeActive;\n\n  if (editModeActive) {\n    return (\n      <Group position=\"right\" spacing=\"md\">\n        <ActionIcon\n          variant=\"filled\"\n          color=\"gray\"\n          sx={{\n            \"&[data-disabled]\": { opacity: 0.4 },\n          }}\n          onClick={() => handleEditAction(false)}\n        >\n          <X size={16} />\n        </ActionIcon>\n\n        <Popover\n          width={250}\n          trapFocus\n          position=\"bottom-end\"\n          withArrow\n          shadow=\"md\"\n        >\n          <Popover.Target>\n            <ActionIcon\n              variant=\"filled\"\n              color=\"blue\"\n              sx={{\n                \"&[data-disabled]\": { opacity: 0.4 },\n              }}\n            >\n              <Check size={16} />\n            </ActionIcon>\n          </Popover.Target>\n          <Popover.Dropdown\n            sx={(theme) => ({\n              background:\n                theme.colorScheme === \"dark\"\n                  ? theme.colors.dark[7]\n                  : theme.white,\n            })}\n          >\n            <Text size=\"sm\">Are you sure you want to save the changes</Text>\n            <Space h=\"sm\" />\n            <Group position=\"right\" spacing=\"md\">\n              <Button\n                size=\"xs\"\n                color=\"gray\"\n                onClick={() => handleEditAction(false)}\n              >\n                Cancel\n              </Button>\n              <Button\n                size=\"xs\"\n                color=\"blue\"\n                onClick={() => {\n                  if (handleSaveAction) {\n                    handleSaveAction();\n                  }\n                  handleEditAction(false);\n                }}\n              >\n                Save\n              </Button>\n            </Group>\n          </Popover.Dropdown>\n        </Popover>\n      </Group>\n    );\n  }\n\n  return (\n    <ActionIcon\n      variant=\"filled\"\n      color=\"gray\"\n      sx={{\n        \"&[data-disabled]\": { opacity: 0.4 },\n      }}\n      onClick={() => handleEditAction(true)}\n    >\n      <Pencil size={16} />\n    </ActionIcon>\n  );\n};\n\nfunction ManageProductsContainer() {\n  const [activeFilter, setActiveFilter] = React.useState<any>(null);\n  const [modalOpen, setModalOpen] = React.useState<any>(false);\n  const [editModeActive, setEditModeActive] = React.useState<boolean>(false);\n  const [modalType, setModalType] = React.useState<string>(\"edit\");\n\n  const handleEditAction = (bool: boolean) => {\n    setEditModeActive(() => bool);\n    setModalType(\"edit\");\n  };\n\n  const handleEditToUpdateAction = () => {\n    setModalType(\"update\");\n    setModalOpen(true);\n  };\n\n  if (editModeActive) {\n    return (\n      <EditProductsContainer\n        editModeActive={editModeActive}\n        handleEditAction={(bool: boolean) => setEditModeActive(() => bool)}\n        modalType={modalType}\n        modalOpen={modalOpen}\n        handleEditToUpdateAction={handleEditToUpdateAction}\n      />\n    );\n  }\n\n  return (\n    <PageWrapper\n      PageHeader={() => (\n        <RenderPageHeader\n          activeFilter={activeFilter}\n          handleRadioChange={(value: any, index: number) =>\n            setActiveFilter(index)\n          }\n        />\n      )}\n      PageAction={() => (\n        <RenderPageAction\n          handleActionClick={() => setModalOpen(true)}\n          handleEditAction={handleEditAction}\n          editModeActive={editModeActive}\n        />\n      )}\n    >\n      <Box\n        sx={(theme) => ({\n          display: \"block\",\n          backgroundColor:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[6]\n              : theme.colors.gray[1],\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[4]\n              : theme.colors.dark[7],\n          textAlign: \"center\",\n          padding: theme.spacing.xl,\n          borderRadius: theme.radius.md,\n          cursor: \"default\",\n        })}\n      >\n        <Group position=\"apart\">\n          <Title order={1}>Rice</Title>\n          <Badge size=\"lg\" color=\"green\" variant=\"light\">\n            Live\n          </Badge>\n        </Group>\n      </Box>\n\n      <Space h=\"lg\" />\n\n      <SimpleGrid cols={2}>\n        {riceCategory.map((cat: any, index: number) => {\n          return (\n            <SectionCard\n              key={index}\n              withBorder\n              radius=\"md\"\n              p=\"lg\"\n              component=\"a\"\n            >\n              <Title order={3}>{cat.name}</Title>\n              <Space h=\"xl\" />\n              <ScrollArea\n                scrollbarSize={2}\n                style={{ maxHeight: 380, height: 360 }}\n              >\n                <List type=\"ordered\" spacing=\"lg\">\n                  {cat.list.map((d: any, i: number) => (\n                    <Box\n                      key={i}\n                      sx={(theme) => ({\n                        display: \"block\",\n                        backgroundColor:\n                          theme.colorScheme === \"dark\"\n                            ? theme.colors.dark[6]\n                            : \"#fff\",\n                        color:\n                          theme.colorScheme === \"dark\"\n                            ? theme.colors.dark[4]\n                            : theme.colors.dark[7],\n                        textAlign: \"left\",\n                        padding: theme.spacing.md,\n                        borderRadius: theme.radius.md,\n                        cursor: \"default\",\n\n                        \"&:hover\": {\n                          backgroundColor:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[5]\n                              : theme.colors.gray[1],\n                        },\n                      })}\n                    >\n                      <List.Item>{d.name}</List.Item>\n                    </Box>\n                  ))}\n                </List>\n              </ScrollArea>\n            </SectionCard>\n          );\n        })}\n      </SimpleGrid>\n    </PageWrapper>\n  );\n}\n\nexport default ManageProductsContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Locations/index.tsx",["179","180","181","182"],[],"import React from \"react\";\nimport {\n  SimpleGrid,\n  Box,\n  ActionIcon,\n  Group,\n  Popover,\n  Text,\n  Button,\n  Space,\n  Title,\n  Badge,\n  Card as SectionCard,\n  List,\n  ScrollArea,\n} from \"@mantine/core\";\nimport { Pencil, X, Check, Plus } from \"tabler-icons-react\";\n\nimport PageWrapper from \"../../components/Wrappers/PageWrapper\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\n\nimport EditLocationFormContainer from \"./EditLocationForm\";\n\nimport { locationCat } from \"../../constants/var.constants\";\n\nconst RenderPageHeader = (props: any) => {\n  const activeFilter = props.activeFilter;\n  const handleRadioChange = props.handleRadioChange;\n\n  return <PageHeader title=\"Manage Locations\" />;\n};\n\nconst RenderPageAction = (props: any) => {\n  const handleSaveAction = props.handleSaveAction;\n  const handleEdit = props.handleEdit;\n  const editModeActive = props.editModeActive || false;\n\n  if (editModeActive) {\n    return (\n      <Group position=\"right\" spacing=\"md\">\n        <ActionIcon\n          variant=\"filled\"\n          color=\"gray\"\n          sx={{\n            \"&[data-disabled]\": { opacity: 0.4 },\n          }}\n          onClick={() => handleEdit(false)}\n        >\n          <X size={16} />\n        </ActionIcon>\n\n        <Popover\n          width={250}\n          trapFocus\n          position=\"bottom-end\"\n          withArrow\n          shadow=\"lg\"\n        >\n          <Popover.Target>\n            <ActionIcon\n              variant=\"filled\"\n              color=\"blue\"\n              sx={{\n                \"&[data-disabled]\": { opacity: 0.4 },\n              }}\n            >\n              <Check size={16} />\n            </ActionIcon>\n          </Popover.Target>\n          <Popover.Dropdown\n            sx={(theme) => ({\n              background:\n                theme.colorScheme === \"dark\"\n                  ? theme.colors.dark[7]\n                  : theme.white,\n            })}\n          >\n            <Text size=\"sm\">Are you sure you want to save the changes</Text>\n            <Space h=\"sm\" />\n            <Group position=\"right\" spacing=\"md\">\n              <Button size=\"xs\" color=\"gray\" onClick={() => handleEdit(false)}>\n                Cancel\n              </Button>\n              <Button\n                size=\"xs\"\n                color=\"blue\"\n                onClick={() => {\n                  if (handleSaveAction) {\n                    handleSaveAction();\n                  }\n                  handleEdit(false);\n                }}\n              >\n                Save\n              </Button>\n            </Group>\n          </Popover.Dropdown>\n        </Popover>\n      </Group>\n    );\n  }\n\n  return (\n    <ActionIcon\n      variant=\"filled\"\n      color=\"gray\"\n      sx={{\n        \"&[data-disabled]\": { opacity: 0.4 },\n      }}\n      onClick={() => handleEdit(true)}\n    >\n      <Pencil size={16} />\n    </ActionIcon>\n  );\n};\n\nconst RenderModalContent = (props: any) => {\n  return <EditLocationFormContainer />;\n};\n\nfunction LocationsContainer() {\n  const [activeFilter, setActiveFilter] = React.useState<any>(null);\n  const [modalOpen, setModalOpen] = React.useState<any>(false);\n  const [editModeActive, setEditModeActive] = React.useState(false);\n\n  const handleEdit = (bool: boolean) => {\n    setEditModeActive(bool);\n  };\n\n  return (\n    <PageWrapper\n      PageHeader={() => (\n        <RenderPageHeader\n          activeFilter={activeFilter}\n          handleRadioChange={(value: any, index: number) =>\n            setActiveFilter(index)\n          }\n        />\n      )}\n      PageAction={() => (\n        <RenderPageAction\n          handleActionClick={() => setModalOpen(true)}\n          handleEdit={handleEdit}\n          editModeActive={editModeActive}\n        />\n      )}\n      modalOpen={modalOpen}\n      modalTitle=\"Add a location\"\n      onModalClose={() => setModalOpen(false)}\n      ModalContent={() => <RenderModalContent />}\n      modalSize=\"40%\"\n    >\n      <div style={{ width: \"100%\", height: \"auto\" }}>\n        <Group spacing=\"md\" grow>\n          {locationCat.map((cat: any, index: number) => {\n            return (\n              <SectionCard\n                key={index}\n                withBorder\n                radius=\"md\"\n                p=\"lg\"\n                component=\"a\"\n              >\n                <Group position=\"apart\">\n                  <Title order={3}>{cat.name}</Title>\n\n                  {editModeActive && (\n                    <ActionIcon\n                      variant=\"light\"\n                      color=\"blue\"\n                      sx={{\n                        \"&[data-disabled]\": { opacity: 0.4 },\n                      }}\n                      onClick={() => {\n                        setModalOpen(true);\n                      }}\n                    >\n                      <Plus size={14} />\n                    </ActionIcon>\n                  )}\n                </Group>\n                <Space h=\"xl\" />\n                <ScrollArea\n                  scrollbarSize={2}\n                  style={{ maxHeight: 380, height: 360 }}\n                >\n                  <List type=\"ordered\" spacing=\"lg\">\n                    {cat.list.map((d: any, i: number) => (\n                      <Box\n                        key={i}\n                        sx={(theme) => ({\n                          display: \"block\",\n                          backgroundColor:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[6]\n                              : \"#fff\",\n                          color:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[4]\n                              : theme.colors.dark[7],\n                          textAlign: \"left\",\n                          padding: theme.spacing.md,\n                          borderRadius: theme.radius.md,\n                          cursor: \"default\",\n\n                          \"&:hover\": {\n                            backgroundColor:\n                              theme.colorScheme === \"dark\"\n                                ? theme.colors.dark[5]\n                                : theme.colors.gray[1],\n                          },\n                        })}\n                      >\n                        <List.Item>{d.name}</List.Item>\n                      </Box>\n                    ))}\n                  </List>\n                </ScrollArea>\n              </SectionCard>\n            );\n          })}\n        </Group>\n      </div>\n    </PageWrapper>\n  );\n}\n\nexport default LocationsContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Packaging/index.tsx",["183","184","185","186","187"],[],"import React, { useEffect } from \"react\";\nimport {\n  SimpleGrid,\n  Box,\n  ActionIcon,\n  Group,\n  Popover,\n  Text,\n  Button,\n  Space,\n  Title,\n  Badge,\n  Card as SectionCard,\n  List,\n  ScrollArea,\n} from \"@mantine/core\";\nimport { Pencil, X, Check, Plus } from \"tabler-icons-react\";\n\nimport PageWrapper from \"../../components/Wrappers/PageWrapper\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\n\nimport EditPackagingFormContainer from \"./EditPackagingForm\";\n\nimport { packagingBags } from \"../../constants/var.constants\";\n\nconst RenderPageHeader = (props: any) => {\n  const activeFilter = props.activeFilter;\n  const handleRadioChange = props.handleRadioChange;\n\n  return <PageHeader title=\"Manage Packaging\" />;\n};\n\nconst RenderPageAction = (props: any) => {\n  const handleSaveAction = props.handleSaveAction;\n  const handleEdit = props.handleEdit;\n  const editModeActive = props.editModeActive || false;\n\n  if (editModeActive) {\n    return (\n      <Group position=\"right\" spacing=\"md\">\n        <ActionIcon\n          variant=\"filled\"\n          color=\"gray\"\n          sx={{\n            \"&[data-disabled]\": { opacity: 0.4 },\n          }}\n          onClick={() => {\n            handleEdit(false);\n          }}\n        >\n          <X size={16} />\n        </ActionIcon>\n\n        <Popover\n          width={250}\n          trapFocus\n          position=\"bottom-end\"\n          withArrow\n          shadow=\"lg\"\n        >\n          <Popover.Target>\n            <ActionIcon\n              variant=\"filled\"\n              color=\"blue\"\n              sx={{\n                \"&[data-disabled]\": { opacity: 0.4 },\n              }}\n            >\n              <Check size={16} />\n            </ActionIcon>\n          </Popover.Target>\n          <Popover.Dropdown\n            sx={(theme) => ({\n              background:\n                theme.colorScheme === \"dark\"\n                  ? theme.colors.dark[7]\n                  : theme.white,\n            })}\n          >\n            <Text size=\"sm\">Are you sure you want to save the changes</Text>\n            <Space h=\"sm\" />\n            <Group position=\"right\" spacing=\"md\">\n              <Button\n                size=\"xs\"\n                color=\"gray\"\n                onClick={() => {\n                  handleEdit(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                size=\"xs\"\n                color=\"blue\"\n                onClick={() => {\n                  if (handleSaveAction) {\n                    handleSaveAction();\n                  }\n                  handleEdit(false);\n                }}\n              >\n                Save\n              </Button>\n            </Group>\n          </Popover.Dropdown>\n        </Popover>\n      </Group>\n    );\n  }\n\n  return (\n    <ActionIcon\n      variant=\"filled\"\n      color=\"gray\"\n      sx={{\n        \"&[data-disabled]\": { opacity: 0.4 },\n      }}\n      onClick={() => {\n        handleEdit(true);\n      }}\n    >\n      <Pencil size={16} />\n    </ActionIcon>\n  );\n};\n\nconst RenderModalContent = (props: any) => {\n  return <EditPackagingFormContainer />;\n};\n\nfunction PackagingContainer() {\n  const [activeFilter, setActiveFilter] = React.useState<any>(null);\n  const [modalOpen, setModalOpen] = React.useState<any>(false);\n  const [editModeActive, setEditModeActive] = React.useState(false);\n\n  const handleEdit = (bool: boolean) => {\n    setEditModeActive(bool);\n  };\n\n  return (\n    <PageWrapper\n      PageHeader={() => (\n        <RenderPageHeader\n          activeFilter={activeFilter}\n          handleRadioChange={(value: any, index: number) =>\n            setActiveFilter(index)\n          }\n        />\n      )}\n      PageAction={() => (\n        <RenderPageAction\n          handleEdit={handleEdit}\n          editModeActive={editModeActive}\n        />\n      )}\n      modalOpen={modalOpen}\n      modalTitle=\"Add a bag\"\n      onModalClose={() => setModalOpen(false)}\n      ModalContent={() => <RenderModalContent />}\n      modalSize=\"40%\"\n    >\n      <div style={{ width: \"100%\", height: \"auto\" }}>\n        <Group spacing=\"md\" grow>\n          {packagingBags.map((cat: any, index: number) => {\n            return (\n              <SectionCard\n                key={index}\n                withBorder\n                radius=\"md\"\n                p=\"lg\"\n                component=\"a\"\n              >\n                <Group position=\"apart\">\n                  <Title order={3}>{cat.name}</Title>\n\n                  {editModeActive && (\n                    <ActionIcon\n                      variant=\"light\"\n                      color=\"blue\"\n                      sx={{\n                        \"&[data-disabled]\": { opacity: 0.4 },\n                      }}\n                      onClick={() => {\n                        setModalOpen(true);\n                      }}\n                    >\n                      <Plus size={14} />\n                    </ActionIcon>\n                  )}\n                </Group>\n                <Space h=\"xl\" />\n                <ScrollArea\n                  scrollbarSize={2}\n                  style={{ maxHeight: 380, height: 360 }}\n                >\n                  <List type=\"ordered\" spacing=\"lg\">\n                    {cat.list.map((d: any, i: number) => (\n                      <Box\n                        key={i}\n                        sx={(theme) => ({\n                          display: \"block\",\n                          backgroundColor:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[6]\n                              : \"#fff\",\n                          color:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[4]\n                              : theme.colors.dark[7],\n                          textAlign: \"left\",\n                          padding: theme.spacing.md,\n                          borderRadius: theme.radius.md,\n                          cursor: \"default\",\n\n                          \"&:hover\": {\n                            backgroundColor:\n                              theme.colorScheme === \"dark\"\n                                ? theme.colors.dark[5]\n                                : theme.colors.gray[1],\n                          },\n                        })}\n                      >\n                        <List.Item>\n                          {d.name} -{\" \"}\n                          <span style={{ fontWeight: \"600\" }}>{d.weight}</span>\n                        </List.Item>\n                      </Box>\n                    ))}\n                  </List>\n                </ScrollArea>\n              </SectionCard>\n            );\n          })}\n        </Group>\n      </div>\n    </PageWrapper>\n  );\n}\n\nexport default PackagingContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Playground/index.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/header.constants.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/sideNavBar.constants.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/sideNavBar.style.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/var.constants.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/header.style.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Wrappers/PageWrapper.tsx",["188"],[],"import React from \"react\";\nimport { Container, Modal, Grid, useMantineTheme } from \"@mantine/core\";\nimport { useStyles } from \"../../styles/components/pageWrapper.style\";\n\nconst PageWrapper = (props: any) => {\n  const { classes } = useStyles();\n\n  const theme = useMantineTheme();\n\n  const children = props.children;\n\n  const PageHeader = props.PageHeader;\n  const PageAction = props.PageAction;\n\n  const modalTitle = props.modalTitle;\n  const ModalContent = props.ModalContent;\n  const onModalClose = props.onModalClose;\n  const modalOpen = props.modalOpen;\n  const modalSize = props.modalSize || \"sm\";\n\n  return (\n    <Container>\n      <Grid gutter=\"xl\">\n        <Grid.Col span={12} className={classes.grid}>\n          <Grid justify=\"space-between\" align=\"flex-end\">\n            <Grid.Col sm={12} md={12} lg={3}>\n              <PageHeader />\n            </Grid.Col>\n            <Grid.Col\n              sm={12}\n              md={12}\n              lg={9}\n              style={{\n                width: \"100%\",\n                justifyContent: \"flex-end\",\n                display: \"inline-flex\",\n              }}\n            >\n              <PageAction />\n            </Grid.Col>\n          </Grid>\n        </Grid.Col>\n        <Grid.Col span={12}>{children}</Grid.Col>\n      </Grid>\n\n      {PageAction && modalOpen !== undefined && (\n        <Modal\n          size={modalSize}\n          centered\n          opened={modalOpen}\n          onClose={onModalClose}\n          title={modalTitle}\n        >\n          <ModalContent />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Products/AddProductForm.tsx",["189","190","191"],[],"import React, { useState } from \"react\";\nimport { Button, TextInput, Space, ActionIcon, Group } from \"@mantine/core\";\nimport { Plus, Minus, Check } from \"tabler-icons-react\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { arrayBuffer } from \"stream/consumers\";\n\nfunction AddProductForm(props: any) {\n  const [categoriesValue, setCategoriesValue] = useState(\"\");\n  const [catUpdateValue, setCatUpdateValue] = useState(\"\");\n  const [categoriesList, setCategoriesList] = useState([]);\n\n\n  const [allValue ,setAllValue]=useState({});\n\n  const form = useForm({\n    clearInputErrorOnChange: true,\n    initialValues: {\n      name: \"\",\n      imageURL: \"\",\n      categoriesList: \"\",\n    },\n\n    validate: {\n      name: (value) =>\n        value.length < 2 ? \"Name must have at least 2 letters\" : null,\n      imageURL: (value) =>\n        value.length === 0\n          ? null\n          : /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/.test(\n              value\n            )\n          ? null\n          : \"Invalid URL\",\n    },\n  });\n  const handleClick: any = () => {\n    const arr: any = [...categoriesList];\n    arr.push(categoriesValue);\n    console.log(arr);\n    setCategoriesList(arr);\n  };\n\n  const handleError = (errors: typeof form.errors) => {\n    if (errors.name) {\n      showNotification({ message: \"Please fill name field\", color: \"red\" });\n    }\n  };\n\n  const handleUpdate = (index: number) => {\n    const arr: any = [...categoriesList];\n    arr[index] = catUpdateValue;\n    \n\n    setCategoriesList(arr);\n\n    console.log(arr);\n  };\n\n  const handleDeleteItem = (index: number) => {\n    const arr: any = [...categoriesList];\n\n    // logic to delete an item starts\n    if (index > -1) {\n      arr.splice(index, 1);\n    }\n\n\n    // logic to delete an item end\n\n    setCategoriesList(arr);\n    console.log(arr);\n  };\n\n  const handleSubmit = (values: typeof form.values) => {\n    // console.log(values);\n    \n   const arr:any =[];\n   arr.push(values);\n   console.log(arr);\n   setAllValue(arr);\n    \n\n  };\n\n  return (\n    <form onSubmit={form.onSubmit(handleSubmit, handleError)}>\n      <TextInput\n        required\n        label=\"Product name\"\n        placeholder=\"eg. Rice\"\n        {...form.getInputProps(\"name\")}\n      />\n\n      <Space h=\"sm\" />\n\n      <TextInput\n        label=\"Image Link\"\n        placeholder=\"eg. https://image-url.com/example-image.png\"\n        {...form.getInputProps(\"imageURL\")}\n      />\n\n      <Space h=\"sm\" />\n\n      {categoriesList.map((k, i) => {\n        return (\n          <Group spacing=\"md\">\n            <TextInput\n              defaultValue={k}\n              size=\"md\"\n              onChange={(e: any) => setCatUpdateValue(e.target.value)}\n              name={\"cat_update\"}\n            />\n            <Group spacing=\"md\" position=\"right\">\n              <ActionIcon variant=\"filled\" onClick={() => handleDeleteItem(i)}>\n                <Minus size={20} />\n              </ActionIcon>\n              <ActionIcon\n                variant=\"filled\"\n                disabled={false}\n                onClick={() => handleUpdate(i)}\n              >\n                <Check size={19} />\n              </ActionIcon>\n            </Group>\n          </Group>\n        );\n      })}\n\n      <TextInput\n        label=\"Categories\"\n        onChange={(event) => {\n          console.log(event.target.value);\n          setCategoriesValue(event.target.value);\n        }}\n        placeholder=\"eg. Categories\"\n      />\n\n      <Button onClick={handleClick}>+</Button>\n\n      <Space h=\"lg\" />\n\n      <Group position=\"right\" mt=\"md\">\n        <Button type=\"submit\" leftIcon={<Plus size={14} />}>\n          Add\n        </Button>\n      </Group>\n    </form>\n  );\n}\n\nexport default AddProductForm;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Card/Card.tsx",["192","193","194"],[],"import React from \"react\";\n\nimport {\n  Card as CardComponent,\n  Image,\n  Text,\n  Badge,\n  Button,\n  Group,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nimport { useStyles } from \"../../styles/components/header.style\";\n\ninterface Props {\n  title: string;\n  status?: string;\n  onClickAction?: any;\n}\n\nconst Card: React.FC<Props> = ({ title, status, onClickAction }) => {\n  const { classes } = useStyles();\n  const theme = useMantineTheme();\n\n  return (\n    <CardComponent\n      shadow=\"sm\"\n      p=\"lg\"\n      radius=\"md\"\n      component=\"a\"\n      style={{ cursor: onClickAction ? \"pointer\" : \"default\" }}\n      withBorder\n      onClick={onClickAction ? onClickAction : () => null}\n    >\n      <CardComponent.Section>\n        <Image\n          src=\"https://images.unsplash.com/photo-1592997572594-34be01bc36c7?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\"\n          height={160}\n          alt=\"Norway\"\n        />\n      </CardComponent.Section>\n\n      <Group position=\"apart\" mt=\"md\" mb=\"xs\">\n        <Text weight={500}>{title}</Text>\n        {status && (\n          <Badge color=\"green\" variant=\"light\">\n            {status}\n          </Badge>\n        )}\n      </Group>\n    </CardComponent>\n  );\n};\n\nexport default Card;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/PageHeader/PageHeader.tsx",["195"],[],"import React from \"react\";\n\nimport {\n  RadioProps,\n  Radio,\n  Text,\n  Breadcrumbs,\n  Anchor,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nimport { useStyles } from \"../../styles/components/pageHeader.style\";\n\ninterface Props {\n  title?: string;\n  label?: string;\n  radioOptions?: any;\n  handleRadioChange?: any;\n  activeFilter?: string | number;\n  breadcrumbs?: any;\n}\n\nconst PageHeader: React.FC<Props> = ({\n  title,\n  label,\n  radioOptions,\n  handleRadioChange,\n  activeFilter,\n  breadcrumbs = [],\n}) => {\n  const { classes } = useStyles();\n  const theme = useMantineTheme();\n\n  const itemsForBreadcrumbs = breadcrumbs.map((item: any, index: number) => (\n    <Anchor href={item.href} key={index}>\n      {item.title}\n    </Anchor>\n  ));\n\n  return (\n    <div>\n      <Text size=\"xl\" weight=\"bold\" color=\"gray\">\n        {title}\n      </Text>\n      {label && (\n        <Text size=\"xs\" weight=\"normal\" color={theme.colors.gray[6]}>\n          {label}\n        </Text>\n      )}\n\n      {radioOptions && (\n        <div className={classes.radioWrapper}>\n          <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\n            {radioOptions.length > 0 &&\n              radioOptions.map((opt: any, index: number) => {\n                return (\n                  <Radio\n                    key={index}\n                    checked={index === activeFilter ? true : false}\n                    value={opt.value}\n                    label={opt.label}\n                    size=\"xs\"\n                    color=\"blue\"\n                    onChange={(value) => {\n                      handleRadioChange(value, index);\n                    }}\n                    style={{\n                      marginLeft: index !== 0 ? 12 : 0,\n                    }}\n                  />\n                );\n              })}\n          </div>\n        </div>\n      )}\n\n      {breadcrumbs && (\n        <div className={classes.breadcrumbWrapper}>\n          <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\n            <Breadcrumbs>{itemsForBreadcrumbs}</Breadcrumbs>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PageHeader;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/EditProducts/EditProducts.tsx",["196","197","198"],[],"import React from \"react\";\nimport {\n  SimpleGrid,\n  Box,\n  ActionIcon,\n  Group,\n  Popover,\n  Text,\n  Button,\n  Select,\n  Space,\n  Title,\n  Badge,\n  Card as SectionCard,\n  List,\n  ScrollArea,\n} from \"@mantine/core\";\nimport { Pencil, X, Check, Plus } from \"tabler-icons-react\";\n\nimport PageWrapper from \"../../../components/Wrappers/PageWrapper\";\nimport PageHeader from \"../../../components/PageHeader/PageHeader\";\n\nimport EditProductForm from \"./EditProductsForm\";\n\nimport { riceCategory } from \"../../../constants/var.constants\";\n\nconst RenderPageHeader = (props: any) => {\n  const activeFilter = props.activeFilter;\n  const handleRadioChange = props.handleRadioChange;\n\n  return (\n    <PageHeader\n      title=\"Manage Products\"\n      breadcrumbs={[\n        { title: \"Products\", href: \"/admin/dashboard/products\" },\n        { title: \"Manage\", href: \"#\" },\n      ]}\n    />\n  );\n};\n\nconst RenderPageAction = (props: any) => {\n  const handleSaveAction = props.handleSaveAction;\n  const handleEditAction = props.handleEditAction;\n  const editModeActive = props.editModeActive;\n\n  if (editModeActive) {\n    return (\n      <Group position=\"right\" spacing=\"md\">\n        <ActionIcon\n          variant=\"filled\"\n          color=\"gray\"\n          sx={{\n            \"&[data-disabled]\": { opacity: 0.4 },\n          }}\n          onClick={() => {\n            console.log(\"here\");\n            handleEditAction(false);\n          }}\n        >\n          <X size={16} />\n        </ActionIcon>\n\n        <Popover\n          width={250}\n          trapFocus\n          position=\"bottom-end\"\n          withArrow\n          shadow=\"md\"\n        >\n          <Popover.Target>\n            <ActionIcon\n              variant=\"filled\"\n              color=\"blue\"\n              sx={{\n                \"&[data-disabled]\": { opacity: 0.4 },\n              }}\n            >\n              <Check size={16} />\n            </ActionIcon>\n          </Popover.Target>\n          <Popover.Dropdown\n            sx={(theme) => ({\n              background:\n                theme.colorScheme === \"dark\"\n                  ? theme.colors.dark[7]\n                  : theme.white,\n            })}\n          >\n            <Text size=\"sm\">Are you sure you want to save the changes</Text>\n            <Space h=\"sm\" />\n            <Group position=\"right\" spacing=\"md\">\n              <Button\n                size=\"xs\"\n                color=\"gray\"\n                onClick={() => {\n                  handleEditAction(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                size=\"xs\"\n                color=\"blue\"\n                onClick={() => {\n                  if (handleSaveAction) {\n                    handleSaveAction();\n                  }\n                  handleEditAction(false);\n                }}\n              >\n                Save\n              </Button>\n            </Group>\n          </Popover.Dropdown>\n        </Popover>\n      </Group>\n    );\n  }\n\n  return (\n    <ActionIcon\n      variant=\"filled\"\n      color=\"gray\"\n      sx={{\n        \"&[data-disabled]\": { opacity: 0.4 },\n      }}\n      onClick={() => handleEditAction(true)}\n    >\n      <Pencil size={16} />\n    </ActionIcon>\n  );\n};\n\nconst RenderModalContent = (props: any) => {\n  return <EditProductForm   />;\n};\n\nfunction EditProductsContainer(props: any) {\n  const editModeActive = props.editModeActive;\n  const handleEditAction = props.handleEditAction;\n  const modalType = props.modalType || \"edit\";\n  const handleEditToUpdateAction = props.handleEditToUpdateAction;\n\n  const [activeFilter, setActiveFilter] = React.useState<any>(null);\n  const [modalOpen, setModalOpen] = React.useState<any>(false);\n\n  const handleSave = (bool: boolean) => {\n    handleEditAction(bool);\n  };\n\n  return (\n    <PageWrapper\n      PageHeader={() => (\n        <RenderPageHeader\n          activeFilter={activeFilter}\n          handleRadioChange={(value: any, index: number) =>\n            setActiveFilter(index)\n          }\n        />\n      )}\n      PageAction={() => (\n        <RenderPageAction\n          editModeActive={editModeActive}\n          handleEditAction={handleSave}\n        />\n      )}\n      modalOpen={modalOpen}\n      modalTitle={\n        modalType === \"edit\"\n          ? \"Add Product Variant\"\n          : \"Update BASMATI 1121 SELLA\"\n      }\n      onModalClose={() => setModalOpen(false)}\n      ModalContent={() => {\n        if (modalType === \"edit\") {\n          return <RenderModalContent  />;\n        }\n\n        if (modalType === \"update\") {\n          return <RenderModalContent />;\n        }\n      }}\n      modalSize=\"70%\"\n    >\n      <Box\n        sx={(theme) => ({\n          display: \"block\",\n          backgroundColor:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[6]\n              : theme.colors.gray[1],\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[4]\n              : theme.colors.dark[7],\n          textAlign: \"center\",\n          padding: theme.spacing.xl,\n          borderRadius: theme.radius.md,\n          cursor: \"default\",\n        })}\n      >\n        <Group position=\"apart\">\n          <Title order={1}>Rice</Title>\n          <Group spacing=\"md\">\n            <Select\n              placeholder=\"Status\"\n              data={[\n                { value: \"live\", label: \"Live\" },\n                { value: \"disabled\", label: \"Disabled\" },\n              ]}\n            />\n            <Button\n              type=\"submit\"\n              leftIcon={<Plus size={14} />}\n              onClick={() => setModalOpen(true)}\n            >\n              Add\n            </Button>\n          </Group>\n        </Group>\n      </Box>\n\n      <Space h=\"lg\" />\n\n      <SimpleGrid cols={2}>\n        {riceCategory.map((cat: any, index: number) => {\n          return (\n            <SectionCard\n              key={index}\n              withBorder\n              radius=\"md\"\n              p=\"lg\"\n              component=\"a\"\n            >\n              <Title order={3}>{cat.name}</Title>\n              <Space h=\"xl\" />\n              <ScrollArea\n                scrollbarSize={2}\n                style={{ maxHeight: 380, height: 360 }}\n              >\n                <List type=\"ordered\" spacing=\"lg\">\n                  {cat.list.map((d: any, i: number) => (\n                    <Box\n                      key={i}\n                      sx={(theme) => ({\n                        display: \"block\",\n                        backgroundColor:\n                          theme.colorScheme === \"dark\"\n                            ? theme.colors.dark[6]\n                            : \"#fff\",\n                        color:\n                          theme.colorScheme === \"dark\"\n                            ? theme.colors.dark[4]\n                            : theme.colors.dark[7],\n                        textAlign: \"left\",\n                        padding: theme.spacing.md,\n                        borderRadius: theme.radius.md,\n                        cursor: \"default\",\n\n                        \"&:hover\": {\n                          backgroundColor:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[5]\n                              : theme.colors.gray[1],\n                        },\n                      })}\n                    >\n                      <Group position=\"apart\">\n                        <List.Item>{d.name}</List.Item>\n\n                        <ActionIcon\n                          variant=\"outline\"\n                          color=\"gray\"\n                          size=\"sm\"\n                          sx={{\n                            \"&[data-disabled]\": { opacity: 0.4 },\n                          }}\n                          onClick={() => {\n                            handleEditToUpdateAction();\n                            setModalOpen(true);\n                            console.log(d);\n                          }}\n                        >\n                          <Pencil size={12} />\n                        </ActionIcon>\n                      </Group>\n                    </Box>\n                  ))}\n                </List>\n              </ScrollArea>\n            </SectionCard>\n          );\n        })}\n      </SimpleGrid>\n    </PageWrapper>\n  );\n}\n\nexport default EditProductsContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Locations/EditLocationForm/index.tsx",["199","200","201"],[],"import React, { useEffect } from \"react\";\nimport {\n  Group,\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  Space,\n} from \"@mantine/core\";\nimport { ArrowRightCircle } from \"tabler-icons-react\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { locationCat } from \"../../../constants/var.constants\";\n\nfunction EditLocationFormContainer(props: any) {\n  const form = useForm({\n    clearInputErrorOnChange: true,\n    initialValues: {\n      name: \"\",\n      category: \"\",\n      source: \"\",\n      origin: \"\",\n      destination: \"\",\n      exMillPrice: \"\",\n      transportation: \"\",\n    },\n\n    validate: {\n      name: (value) =>\n        value.length < 2 ? \"Name must have at least 2 letters\" : null,\n    },\n  });\n\n  const handleError = (errors: typeof form.errors) => {\n    if (errors.name) {\n      showNotification({ message: \"Please fill name field\", color: \"red\" });\n    }\n  };\n\n  const handleSubmit = (values: typeof form.values) => {\n    let arr:any=[];\n    if (values.name=== \"Source Location\") {\n      arr = [...locationCat[0].list];\n      arr.push(values);\n      console.log(\"arr 1\", arr);\n    } \n    if(values.name === \"Origin Ports\") \n    {\n      arr = [...locationCat[1].list];\n      arr.push(values);\n      console.log(\"arr 1\", arr);}\n    else {\n      arr = [...locationCat[2].list];\n      arr.push(values);\n      console.log(\"arr 3\", arr);\n    }\n  };\n\n  return (\n    <form onSubmit={form.onSubmit(handleSubmit, handleError)}>\n      <Select\n        required\n        label=\"Select location type\"\n        placeholder=\"Eg. Source\"\n        data={[\n          { value: \"source\", label: \"Source\" },\n          { value: \"origin\", label: \"Origin\" },\n          { value: \"destination\", label: \"Destination\" },\n        ]}\n        {...form.getInputProps(\"category\")}\n      />\n\n      <Space h=\"md\" />\n\n      <TextInput\n        required\n        label=\"Location name\"\n        placeholder=\"eg. Kolkata\"\n        {...form.getInputProps(\"name\")}\n      />\n\n      <Space h=\"md\" />\n\n      <TextInput\n        required\n        label=\"City name\"\n        placeholder=\"eg. Kolkata\"\n        {...form.getInputProps(\"city\")}\n      />\n\n      <Space h=\"md\" />\n\n      <Select\n        required\n        label=\"Select country\"\n        placeholder=\"Eg. Source\"\n        data={[\n          { value: \"india\", label: \"India\" },\n          { value: \"singapore\", label: \"Singapore\" },\n          { value: \"vietnam\", label: \"Vietnam\" },\n        ]}\n        {...form.getInputProps(\"category\")}\n      />\n\n      <Space h=\"lg\" />\n\n      <Group position=\"right\" mt=\"md\" spacing=\"md\">\n        <Button type=\"button\" color=\"blue\" variant=\"subtle\">\n          Save & add another\n        </Button>\n        <Button type=\"submit\">Add</Button>\n      </Group>\n    </form>\n  );\n}\n\nexport default EditLocationFormContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Packaging/EditPackagingForm/index.tsx",["202","203","204"],[],"import React, { useEffect } from \"react\";\nimport {\n  Group,\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  Space,\n} from \"@mantine/core\";\nimport { ArrowRightCircle } from \"tabler-icons-react\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { packagingBags } from \"../../../constants/var.constants\";\n\nfunction EditPackagingFormContainer(props: any) {\n  const form = useForm({\n    clearInputErrorOnChange: true,\n    initialValues: {\n      name: \"\",\n      category: \"\",\n      source: \"\",\n      origin: \"\",\n      destination: \"\",\n      exMillPrice: \"\",\n      transportation: \"\",\n    },\n\n    validate: {\n      name: (value) =>\n        value.length < 2 ? \"Name must have at least 2 letters\" : null,\n    },\n  });\n\n  const handleError = (errors: typeof form.errors) => {\n    if (errors.name) {\n      showNotification({ message: \"Please fill name field\", color: \"red\" });\n    }\n  };\n\n  const handleSubmit = (values: typeof form.values) => {\n\n    let arr:any=[];\n    if (values.category === \"ppwoven\") {\n      arr = [...packagingBags[0].list];\n      arr.push(values);\n      console.log(\"arr 1\", arr);\n    } else {\n      arr = [...packagingBags[1].list];\n      arr.push(values);\n      console.log(\"arr 2\", arr);\n    }\n  };\n\n  return (\n    <form onSubmit={form.onSubmit(handleSubmit, handleError)}>\n      <Select\n        required\n        label=\"Select Bag\"\n        placeholder=\"Eg. BOPP\"\n        data={[\n          { value: \"bopp\", label: \"BOPP\" },\n          { value: \"ppwoven\", label: \"PPWOVEN\" },\n        ]}\n        {...form.getInputProps(\"category\")}\n      />\n\n      <Space h=\"md\" />\n\n      <NumberInput\n        required\n        label=\"Weight (in KG)\"\n        placeholder=\"eg. 18\"\n        {...form.getInputProps(\"name\")}\n      />\n\n      <Space h=\"md\" />\n\n      <NumberInput\n        required\n        label=\"Cost per bag\"\n        placeholder=\"eg. 18\"\n        {...form.getInputProps(\"costPerBag\")}\n      />\n\n      <Space h=\"lg\" />\n\n      <Group position=\"right\" mt=\"md\" spacing=\"md\">\n        <Button type=\"button\" color=\"blue\" variant=\"subtle\">\n          Save & add another\n        </Button>\n        <Button type=\"submit\">Add</Button>\n      </Group>\n    </form>\n  );\n}\n\nexport default EditPackagingFormContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Playground/ECForm/index.tsx",["205","206","207","208","209","210"],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/pageWrapper.style.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/pageHeader.style.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/EditProducts/EditProductsForm.tsx",["211"],[],"import React from \"react\";\nimport {\n  Group,\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  Space,\n} from \"@mantine/core\";\nimport { Plus, ArrowRightCircle } from \"tabler-icons-react\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { riceCategory } from \"../../../constants/var.constants\";\n\nfunction EditProductForm(props: any) {\n  const form = useForm({\n    clearInputErrorOnChange: true,\n    initialValues: {\n      name: \"\",\n      category: \"\",\n      source: \"\",\n      origin: \"\",\n      destination: \"\",\n      exMillPrice: \"\",\n      transportation: \"\",\n    },\n\n    validate: {\n      name: (value) =>\n        value.length < 2 ? \"Name must have at least 2 letters\" : null,\n    },\n  });\n\n  const handleError = (errors: typeof form.errors) => {\n    if (errors.name) {\n      showNotification({ message: \"Please fill name field\", color: \"red\" });\n    }\n  };\n\n  const handleSubmit = (values: typeof form.values) => {\n    let arr: any = [];\n\n    if (values.category === \"Basmati\") {\n      arr = [...riceCategory[0].list];\n      arr.push(values);\n      console.log(\"arr 1\", arr);\n    } else {\n      arr = [...riceCategory[1].list];\n      arr.push(values);\n      console.log(\"arr 2\", arr);\n    }\n  };\n\n  return (\n    <form onSubmit={form.onSubmit(handleSubmit, handleError)}>\n      <Select\n        required\n        label=\"Select Category\"\n        placeholder=\"Eg. Non-Basmati\"\n        data={[\n          { value: \"non-basmati\", label: \"Non-Basmati\" },\n          { value: \"basmati\", label: \"Basmati\" },\n        ]}\n        {...form.getInputProps(\"category\")}\n      />\n\n      <Space h=\"md\" />\n\n      <TextInput\n        required\n        label=\"Variant name\"\n        placeholder=\"eg. 1509 Sella\"\n        {...form.getInputProps(\"name\")}\n      />\n\n      <Space h=\"md\" />\n\n      <Group spacing=\"md\" grow>\n        <Select\n          required\n          label=\"Source Location\"\n          placeholder=\"Eg. Kolkata\"\n          data={[]}\n          {...form.getInputProps(\"source\")}\n        />\n\n        <NumberInput\n          required\n          label=\"Ex-Mill Price\"\n          placeholder=\"Eg. 26500\"\n          {...form.getInputProps(\"exMillPrice\")}\n        />\n        <Select\n          required\n          label=\"Origin Port\"\n          placeholder=\"Eg. CHENNAI\"\n          data={[]}\n          {...form.getInputProps(\"origin\")}\n        />\n        <NumberInput\n          required\n          label=\"Transportation\"\n          placeholder=\"Eg. 1600\"\n          {...form.getInputProps(\"transportation\")}\n        />\n\n        <div\n          style={{\n            display: \"inline-flex\",\n            alignItems: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <ArrowRightCircle size={24} style={{ marginTop: `14%` }} />\n          <Space w=\"md\" />\n          <Select\n            required\n            label=\"Destination Port\"\n            placeholder=\"Eg. SINGAPORE\"\n            style={{\n              width: \"100%\",\n            }}\n            data={[]}\n            {...form.getInputProps(\"destination\")}\n          />\n        </div>\n      </Group>\n\n      <Space h=\"md\" />\n\n      <NumberInput\n        required\n        label=\"Ex-Mill Price (INR)\"\n        placeholder=\"Eg. 26500\"\n        {...form.getInputProps(\"exmill\")}\n      />\n\n      <Space h=\"lg\" />\n\n      <Group position=\"right\" mt=\"md\">\n        <Button type=\"submit\">Save</Button>\n      </Group>\n    </form>\n  );\n}\n\nexport default EditProductForm;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/eceForm.constants.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/screens/login/LoginForm.tsx",["212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228"],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/screens/login/Otp.tsx",["229","230","231","232","233","234","235","236","237","238","239","240","241","242"],[],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { Center, AspectRatio, Image, Group } from \"@mantine/core\";\nimport { useForm } from \"@mantine/form\";\nimport { Container } from \"@mantine/core\";\nimport { TextInput, Grid, Box, Card } from \"@mantine/core\";\nimport { Button, SimpleGrid, Loader, Space, Text } from \"@mantine/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport DashboardScreen from \"../dashboard\";\n\nimport { showNotification } from \"@mantine/notifications\";\nimport axios from \"axios\";\nimport { OutputFileType } from \"typescript\";\n// import { isDisabled } from \"@testing-library/user-event/dist/utils\";\n\nconst Otp = (props: any) => {\n  const Router = useNavigate();\n  const [timer, setTimer] = useState(60);\n\n  const [otp, setOtp] = useState(\"\");\n\n  const [disable, setDisable] = useState(true);\n\n  const timeOutCallback = useCallback(\n    () => setTimer((currTimer) => currTimer - 1),\n    []\n  );\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     ref.currTimer.click();\n  //   }, 60000); //miliseconds\n  // }, []);\n\n  // console.log(timer);\n\n  useEffect(() => {\n    timer > 0 && setTimeout(timeOutCallback, 1000);\n\n    timer === 0 ? setDisable(false) : setDisable(true);\n\n    // if (timer === 0) {\n    //   setDisable(false);\n    // }else{\n    //   setDisable(true);\n    // }\n  }, [timer, timeOutCallback]);\n\n  // const handleClick = ()=>{\n  //   Router(\"/Otp\", { replace: true });\n  // }\n\n  const resetTimer = () => {\n    if (!timer) {\n      setTimer(60);\n    }\n  };\n\n  // const [authVerified, setAuthVerified] = useState(false);\n  // console.log(\"authVerified\",authVerified);\n  // let [modelOpen, setModelOpen] = useState(false);\n\n  const initialFormState: any = {\n    // clearInputErrorOnChange: true,\n    // initialValues: {\n    //   otp: \"\",\n    // },\n    validate: {\n      otp: (values: any) =>\n        values.length < 4 || values.length > 4\n          ? \"Otp must have 4* digit \"\n          : null,\n    },\n  };\n\n  const form: any = useForm(initialFormState);\n\n  const handleError = (errors: typeof form.errors) => {\n    if (errors.otp) {\n      showNotification({\n        message: \"otp have only 4* digit number\",\n        color: \"red\",\n      });\n    }\n  };\n\n  const handleReset = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const payload: any = {\n      mobileNumber: \"9902156864\",\n      userType: \"admin\",\n    };\n\n    axios\n      .post(\"https://uat.pwip.co/user/public/resendotp\", payload)\n      .then((res: any) => {\n        console.log(res);\n        if (res.data.type === \"success\") {\n          console.log(res);\n\n          showNotification({\n            title: \"OTP sent succesfully again\",\n            message: \"\",\n            autoClose: 1500,\n          });\n        }\n      });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const payload: any = {\n      otp: otp,\n      userType: \"admin\",\n      grant_type: \"password\",\n      username: \"9902156864\",\n    };\n    let formData = new FormData(); //formdata object\n\n    formData.append(\"otp\", otp); //append the values with key, value pair\n    formData.append(\"userType\", \"admin\");\n    formData.append(\"grant_type\", \"password\");\n    formData.append(\"username\", \"9902156864\");\n\n    axios\n      .post(\"https://uat.pwip.co/oauth/token\", formData, {\n        headers: {\n          Authorization: \"Basic YW5ndWxhci1jbGllbnQ6YW5ndWxhci1zZWNyZXQ=\",\n        },\n      })\n      .then((res: any) => {\n        console.log(res);\n        if (res.status === 200) {\n          localStorage.setItem(\"access_token\", res.data.access_token);\n          showNotification({\n            title: \"Logged In Succesfully\",\n            message: \"\",\n            autoClose: 1000,\n          });\n\n          Router(\"/admin/dashboard\");\n        }\n        //  else if (res.status === 400) {\n        //     showNotification({\n        //       title: \"Otp Wrong\",\n        //       message: \"error\",\n        //        autoClose: 1000,\n        //     })\n        //   }\n      })\n      .catch((error) => {\n        console.log(\"got error\");\n        showNotification({\n          title: \"Your OTP is incorrect, Please try again\",\n          message: \"\",\n          autoClose: 1000,\n        });\n        console.log(error.res.data.error);\n      });\n  };\n\n  return (\n    <form\n    // onSubmit={form.onSubmit(handleSubmit, handleError)}\n    >\n      <>\n        <AspectRatio ratio={290 / 182} sx={{ maxWidth: 300 }} mx=\"auto\">\n          <img src=\"https://admin-uat.pwip.co/assets/logo.png\"></img>\n        </AspectRatio>\n        <Space h={80} />\n\n        <Card withBorder p=\"xl\" component=\"div\">\n          <Grid>\n            <Grid.Col span={6} offset={5}>\n              <Text>Login on EC Admin</Text>\n            </Grid.Col>\n            <Space h={80} />\n            <Grid.Col span={4} offset={4}>\n              <TextInput\n                placeholder=\"xxxx\"\n                label=\"Enter OTP\"\n                type=\"number\"\n                size=\"md\"\n                radius=\"lg\"\n                // maxLength=\"4\"\n                error={otp.length > 4 || otp.length < 4}\n                onChange={(e) => {\n                  console.log(\"enter otp\", e.target.value);\n                  setOtp(e.target.value);\n                }}\n                // {...form.getInputProps(\"otp\")}\n              />\n            </Grid.Col>\n\n            <Grid.Col span={2} offset={4}>\n              <Button\n                radius=\"xl\"\n                size=\"xs\"\n                type=\"button\"\n                onClick={handleSubmit}\n              >\n                submit\n              </Button>\n            </Grid.Col>\n\n            <Grid.Col span={1}>\n              <Button\n                disabled={disable}\n                radius=\"xl\"\n                size=\"xs\"\n                type=\"button\"\n                onClick={handleReset}\n              >\n                Resend Otp\n              </Button>\n            </Grid.Col>\n            <Grid.Col span={5} offset={4}>\n              <Text>Resend OTP in ({timer})</Text>\n            </Grid.Col>\n          </Grid>\n        </Card>\n      </>\n    </form>\n  );\n};\n\nexport default Otp;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/hoc/withAuth.js",["243"],[],"\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst withAuth = (WrappedComponent) => {\n\n  return (props) => {\n    const navigate = useNavigate();\n    \n    const [authVerified, setAuthVerified] = useState(false);\n\n    useEffect( () => {\n      const accessToken = localStorage.getItem(\"access_token\");\n      console.log(\"access_token\");\n      // if no accessToken was found,then we redirect to \"/\" page.\n      if (!accessToken) {\n       \n        window.location.href = '/'\n      } else {\n        setAuthVerified(true);\n      }\n    }, []);\n\n    if (authVerified) {\n      return <WrappedComponent {...props} />;\n    } else {\n      return null;\n    }\n  };\n}\n\n\n  // \n  // const [authVerified, setAuthVerified] = useState(false);\n  // console.log(authVerified)\n\n  // // const PrivateRoute = ({ redirectTo, component , isAuth }) => {\n  // //   return isAuth ?  component : <Navigate to={redirectTo} />;\n  // // };\n  // useEffect(() => {\n  //   const accessToken = localStorage.getItem(\"access_token\");\n  //   // if no accessToken was found,then we redirect to \"/\" page.\n  //   if (!accessToken) {\n  //     navigate('/', { replace: true });\n\n  //   } else {\n  //     setAuthVerified(true);\n  //     // navigate('/admin/dashboard', { replace: true });\n  //   //  < Navigate to={<DashboardScreen/>}/>\n  //   }\n  // }, []);\n\n\n  // return () => {\n   \n\n   \n\n    // if (authVerified) {\n    //   return <\n    //       DashboardScreen \n    //        />;\n    // } else {\n    //   return null;\n    // }\n \n\n\n\n\n\nexport default withAuth;\n\n\n\n",[],{"ruleId":"244","severity":1,"message":"245","line":27,"column":9,"nodeType":"246","messageId":"247","endLine":27,"endColumn":21},{"ruleId":"244","severity":1,"message":"248","line":28,"column":9,"nodeType":"246","messageId":"247","endLine":28,"endColumn":26},{"ruleId":"244","severity":1,"message":"249","line":3,"column":3,"nodeType":"246","messageId":"247","endLine":3,"endColumn":13},{"ruleId":"244","severity":1,"message":"250","line":12,"column":3,"nodeType":"246","messageId":"247","endLine":12,"endColumn":8},{"ruleId":"244","severity":1,"message":"245","line":27,"column":9,"nodeType":"246","messageId":"247","endLine":27,"endColumn":21},{"ruleId":"244","severity":1,"message":"248","line":28,"column":9,"nodeType":"246","messageId":"247","endLine":28,"endColumn":26},{"ruleId":"244","severity":1,"message":"251","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"249","line":3,"column":3,"nodeType":"246","messageId":"247","endLine":3,"endColumn":13},{"ruleId":"244","severity":1,"message":"250","line":12,"column":3,"nodeType":"246","messageId":"247","endLine":12,"endColumn":8},{"ruleId":"244","severity":1,"message":"245","line":27,"column":9,"nodeType":"246","messageId":"247","endLine":27,"endColumn":21},{"ruleId":"244","severity":1,"message":"248","line":28,"column":9,"nodeType":"246","messageId":"247","endLine":28,"endColumn":26},{"ruleId":"244","severity":1,"message":"252","line":8,"column":9,"nodeType":"246","messageId":"247","endLine":8,"endColumn":14},{"ruleId":"244","severity":1,"message":"253","line":6,"column":10,"nodeType":"246","messageId":"247","endLine":6,"endColumn":21},{"ruleId":"244","severity":1,"message":"254","line":14,"column":10,"nodeType":"246","messageId":"247","endLine":14,"endColumn":18},{"ruleId":"255","severity":1,"message":"256","line":30,"column":89,"nodeType":"257","messageId":"258","endLine":30,"endColumn":90,"suggestions":"259"},{"ruleId":"244","severity":1,"message":"260","line":8,"column":3,"nodeType":"246","messageId":"247","endLine":8,"endColumn":9},{"ruleId":"244","severity":1,"message":"261","line":22,"column":11,"nodeType":"246","messageId":"247","endLine":22,"endColumn":18},{"ruleId":"244","severity":1,"message":"252","line":23,"column":9,"nodeType":"246","messageId":"247","endLine":23,"endColumn":14},{"ruleId":"244","severity":1,"message":"262","line":4,"column":3,"nodeType":"246","messageId":"247","endLine":4,"endColumn":13},{"ruleId":"244","severity":1,"message":"250","line":13,"column":3,"nodeType":"246","messageId":"247","endLine":13,"endColumn":8},{"ruleId":"244","severity":1,"message":"245","line":28,"column":9,"nodeType":"246","messageId":"247","endLine":28,"endColumn":21},{"ruleId":"244","severity":1,"message":"248","line":29,"column":9,"nodeType":"246","messageId":"247","endLine":29,"endColumn":26},{"ruleId":"244","severity":1,"message":"251","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"263","line":6,"column":3,"nodeType":"246","messageId":"247","endLine":6,"endColumn":14},{"ruleId":"244","severity":1,"message":"264","line":10,"column":10,"nodeType":"246","messageId":"247","endLine":10,"endColumn":26},{"ruleId":"244","severity":1,"message":"251","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"265","line":5,"column":3,"nodeType":"246","messageId":"247","endLine":5,"endColumn":12},{"ruleId":"244","severity":1,"message":"264","line":10,"column":10,"nodeType":"246","messageId":"247","endLine":10,"endColumn":26},{"ruleId":"244","severity":1,"message":"251","line":1,"column":27,"nodeType":"246","messageId":"247","endLine":1,"endColumn":36},{"ruleId":"244","severity":1,"message":"263","line":6,"column":3,"nodeType":"246","messageId":"247","endLine":6,"endColumn":14},{"ruleId":"244","severity":1,"message":"266","line":12,"column":3,"nodeType":"246","messageId":"247","endLine":12,"endColumn":8},{"ruleId":"244","severity":1,"message":"267","line":13,"column":3,"nodeType":"246","messageId":"247","endLine":13,"endColumn":11},{"ruleId":"244","severity":1,"message":"268","line":19,"column":10,"nodeType":"246","messageId":"247","endLine":19,"endColumn":15},{"ruleId":"269","severity":1,"message":"270","line":166,"column":29,"nodeType":"271","messageId":"272","endLine":166,"endColumn":31},{"ruleId":"244","severity":1,"message":"273","line":10,"column":10,"nodeType":"246","messageId":"247","endLine":10,"endColumn":14},{"ruleId":"244","severity":1,"message":"251","line":1,"column":27,"nodeType":"246","messageId":"247","endLine":1,"endColumn":36},{"ruleId":"244","severity":1,"message":"274","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":16},{"ruleId":"244","severity":1,"message":"275","line":2,"column":31,"nodeType":"246","messageId":"247","endLine":2,"endColumn":36},{"ruleId":"244","severity":1,"message":"276","line":2,"column":38,"nodeType":"246","messageId":"247","endLine":2,"endColumn":43},{"ruleId":"244","severity":1,"message":"277","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":19},{"ruleId":"244","severity":1,"message":"278","line":5,"column":27,"nodeType":"246","messageId":"247","endLine":5,"endColumn":30},{"ruleId":"244","severity":1,"message":"249","line":6,"column":18,"nodeType":"246","messageId":"247","endLine":6,"endColumn":28},{"ruleId":"244","severity":1,"message":"279","line":6,"column":30,"nodeType":"246","messageId":"247","endLine":6,"endColumn":36},{"ruleId":"244","severity":1,"message":"280","line":7,"column":27,"nodeType":"246","messageId":"247","endLine":7,"endColumn":33},{"ruleId":"244","severity":1,"message":"281","line":7,"column":35,"nodeType":"246","messageId":"247","endLine":7,"endColumn":41},{"ruleId":"244","severity":1,"message":"282","line":7,"column":43,"nodeType":"246","messageId":"247","endLine":7,"endColumn":48},{"ruleId":"244","severity":1,"message":"283","line":8,"column":8,"nodeType":"246","messageId":"247","endLine":8,"endColumn":11},{"ruleId":"244","severity":1,"message":"284","line":9,"column":10,"nodeType":"246","messageId":"247","endLine":9,"endColumn":22},{"ruleId":"244","severity":1,"message":"285","line":15,"column":10,"nodeType":"246","messageId":"247","endLine":15,"endColumn":18},{"ruleId":"244","severity":1,"message":"286","line":16,"column":10,"nodeType":"246","messageId":"247","endLine":16,"endColumn":26},{"ruleId":"244","severity":1,"message":"287","line":42,"column":9,"nodeType":"246","messageId":"247","endLine":42,"endColumn":20},{"ruleId":"288","severity":1,"message":"289","line":92,"column":11,"nodeType":"290","endLine":92,"endColumn":64},{"ruleId":"244","severity":1,"message":"291","line":1,"column":51,"nodeType":"246","messageId":"247","endLine":1,"endColumn":57},{"ruleId":"244","severity":1,"message":"274","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":16},{"ruleId":"244","severity":1,"message":"275","line":2,"column":31,"nodeType":"246","messageId":"247","endLine":2,"endColumn":36},{"ruleId":"244","severity":1,"message":"276","line":2,"column":38,"nodeType":"246","messageId":"247","endLine":2,"endColumn":43},{"ruleId":"244","severity":1,"message":"277","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":19},{"ruleId":"244","severity":1,"message":"278","line":5,"column":27,"nodeType":"246","messageId":"247","endLine":5,"endColumn":30},{"ruleId":"244","severity":1,"message":"249","line":6,"column":18,"nodeType":"246","messageId":"247","endLine":6,"endColumn":28},{"ruleId":"244","severity":1,"message":"279","line":6,"column":30,"nodeType":"246","messageId":"247","endLine":6,"endColumn":36},{"ruleId":"244","severity":1,"message":"292","line":8,"column":8,"nodeType":"246","messageId":"247","endLine":8,"endColumn":23},{"ruleId":"244","severity":1,"message":"293","line":12,"column":10,"nodeType":"246","messageId":"247","endLine":12,"endColumn":24},{"ruleId":"244","severity":1,"message":"294","line":52,"column":9,"nodeType":"246","messageId":"247","endLine":52,"endColumn":19},{"ruleId":"244","severity":1,"message":"287","line":77,"column":9,"nodeType":"246","messageId":"247","endLine":77,"endColumn":20},{"ruleId":"244","severity":1,"message":"295","line":113,"column":11,"nodeType":"246","messageId":"247","endLine":113,"endColumn":23},{"ruleId":"288","severity":1,"message":"289","line":169,"column":11,"nodeType":"290","endLine":169,"endColumn":64},{"ruleId":"296","severity":1,"message":"297","line":10,"column":11,"nodeType":"246","messageId":"247","endLine":10,"endColumn":19},"@typescript-eslint/no-unused-vars","'activeFilter' is assigned a value but never used.","Identifier","unusedVar","'handleRadioChange' is assigned a value but never used.","'SimpleGrid' is defined but never used.","'Badge' is defined but never used.","'useEffect' is defined but never used.","'theme' is assigned a value but never used.","'arrayBuffer' is defined but never used.","'allValue' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["298","299"],"'Button' is defined but never used.","'classes' is assigned a value but never used.","'RadioProps' is defined but never used.","'NumberInput' is defined but never used.","'ArrowRightCircle' is defined but never used.","'TextInput' is defined but never used.","'Input' is defined but never used.","'Checkbox' is defined but never used.","'Title' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Plus' is defined but never used.","'Center' is defined but never used.","'Image' is defined but never used.","'Group' is defined but never used.","'Container' is defined but never used.","'Box' is defined but never used.","'Loader' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Otp' is defined but never used.","'Notification' is defined but never used.","'getValue' is defined but never used.","'setConstantValue' is defined but never used.","'handleError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'DashboardScreen' is defined but never used.","'OutputFileType' is defined but never used.","'resetTimer' is assigned a value but never used.","'payload' is assigned a value but never used.","no-unused-vars","'navigate' is assigned a value but never used.",{"messageId":"300","fix":"301","desc":"302"},{"messageId":"303","fix":"304","desc":"305"},"removeEscape",{"range":"306","text":"307"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"308","text":"309"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1013,1014],"",[1013,1013],"\\"]
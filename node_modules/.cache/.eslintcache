[{"/Users/himanshudahiya/Desktop/export-costing-fe/src/index.tsx":"1","/Users/himanshudahiya/Desktop/export-costing-fe/src/reportWebVitals.ts":"2","/Users/himanshudahiya/Desktop/export-costing-fe/src/App.tsx":"3","/Users/himanshudahiya/Desktop/export-costing-fe/src/screens/dashboard/index.tsx":"4","/Users/himanshudahiya/Desktop/export-costing-fe/src/layouts/AppLayout.tsx":"5","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Header/Header.tsx":"6","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/SideNavBar/SideNavBar.tsx":"7","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Products/index.tsx":"8","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Packaging/index.tsx":"9","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Playground/index.tsx":"10","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/index.tsx":"11","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Locations/index.tsx":"12","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/header.constants.tsx":"13","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/sideNavBar.constants.tsx":"14","/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/header.style.tsx":"15","/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/sideNavBar.style.tsx":"16","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/var.constants.tsx":"17","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Products/AddProductForm.tsx":"18","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Wrappers/PageWrapper.tsx":"19","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/PageHeader/PageHeader.tsx":"20","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Card/Card.tsx":"21","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/EditProducts/EditProducts.tsx":"22","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Packaging/EditPackagingForm/index.tsx":"23","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Locations/EditLocationForm/index.tsx":"24","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Playground/ECForm/index.tsx":"25","/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/pageHeader.style.tsx":"26","/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/pageWrapper.style.tsx":"27","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/EditProducts/EditProductsForm.tsx":"28","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/eceForm.constants.tsx":"29"},{"size":554,"mtime":1667568352771,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1667568352773,"results":"32","hashOfConfig":"31"},{"size":430,"mtime":1667568352761,"results":"33","hashOfConfig":"31"},{"size":166,"mtime":1667568352773,"results":"34","hashOfConfig":"31"},{"size":3218,"mtime":1667568352772,"results":"35","hashOfConfig":"31"},{"size":2059,"mtime":1667568352763,"results":"36","hashOfConfig":"31"},{"size":4160,"mtime":1667568352764,"results":"37","hashOfConfig":"31"},{"size":2304,"mtime":1667568352771,"results":"38","hashOfConfig":"31"},{"size":6766,"mtime":1667568352768,"results":"39","hashOfConfig":"31"},{"size":1911,"mtime":1667568352770,"results":"40","hashOfConfig":"31"},{"size":7053,"mtime":1667568352767,"results":"41","hashOfConfig":"31"},{"size":6517,"mtime":1667568352766,"results":"42","hashOfConfig":"31"},{"size":177,"mtime":1667568352764,"results":"43","hashOfConfig":"31"},{"size":514,"mtime":1667568352765,"results":"44","hashOfConfig":"31"},{"size":813,"mtime":1667568352774,"results":"45","hashOfConfig":"31"},{"size":1060,"mtime":1667568352776,"results":"46","hashOfConfig":"31"},{"size":3092,"mtime":1667568352765,"results":"47","hashOfConfig":"31"},{"size":3784,"mtime":1667568352770,"results":"48","hashOfConfig":"31"},{"size":1599,"mtime":1667568352764,"results":"49","hashOfConfig":"31"},{"size":2134,"mtime":1667568352763,"results":"50","hashOfConfig":"31"},{"size":1268,"mtime":1667568352762,"results":"51","hashOfConfig":"31"},{"size":8296,"mtime":1667568352766,"results":"52","hashOfConfig":"31"},{"size":2263,"mtime":1667568352768,"results":"53","hashOfConfig":"31"},{"size":2822,"mtime":1667568352766,"results":"54","hashOfConfig":"31"},{"size":5916,"mtime":1667570446651,"results":"55","hashOfConfig":"31"},{"size":252,"mtime":1667568352775,"results":"56","hashOfConfig":"31"},{"size":226,"mtime":1667568352775,"results":"57","hashOfConfig":"31"},{"size":3444,"mtime":1667568352766,"results":"58","hashOfConfig":"31"},{"size":7483,"mtime":1667568352764,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v95qcr",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/himanshudahiya/Desktop/export-costing-fe/src/index.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/reportWebVitals.ts",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/App.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/screens/dashboard/index.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/layouts/AppLayout.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Header/Header.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/components/SideNavBar/SideNavBar.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Products/index.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Packaging/index.tsx",["160","161","162","163","164"],[],"import React, { useEffect } from \"react\";\nimport {\n  SimpleGrid,\n  Box,\n  ActionIcon,\n  Group,\n  Popover,\n  Text,\n  Button,\n  Space,\n  Title,\n  Badge,\n  Card as SectionCard,\n  List,\n  ScrollArea,\n} from \"@mantine/core\";\nimport { Pencil, X, Check, Plus } from \"tabler-icons-react\";\n\nimport PageWrapper from \"../../components/Wrappers/PageWrapper\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\n\nimport EditPackagingFormContainer from \"./EditPackagingForm\";\n\nimport { packagingBags } from \"../../constants/var.constants\";\n\nconst RenderPageHeader = (props: any) => {\n  const activeFilter = props.activeFilter;\n  const handleRadioChange = props.handleRadioChange;\n\n  return <PageHeader title=\"Manage Packaging\" />;\n};\n\nconst RenderPageAction = (props: any) => {\n  const handleSaveAction = props.handleSaveAction;\n  const handleEdit = props.handleEdit;\n  const editModeActive = props.editModeActive || false;\n\n  if (editModeActive) {\n    return (\n      <Group position=\"right\" spacing=\"md\">\n        <ActionIcon\n          variant=\"filled\"\n          color=\"gray\"\n          sx={{\n            \"&[data-disabled]\": { opacity: 0.4 },\n          }}\n          onClick={() => {\n            handleEdit(false);\n          }}\n        >\n          <X size={16} />\n        </ActionIcon>\n\n        <Popover\n          width={250}\n          trapFocus\n          position=\"bottom-end\"\n          withArrow\n          shadow=\"lg\"\n        >\n          <Popover.Target>\n            <ActionIcon\n              variant=\"filled\"\n              color=\"blue\"\n              sx={{\n                \"&[data-disabled]\": { opacity: 0.4 },\n              }}\n            >\n              <Check size={16} />\n            </ActionIcon>\n          </Popover.Target>\n          <Popover.Dropdown\n            sx={(theme) => ({\n              background:\n                theme.colorScheme === \"dark\"\n                  ? theme.colors.dark[7]\n                  : theme.white,\n            })}\n          >\n            <Text size=\"sm\">Are you sure you want to save the changes</Text>\n            <Space h=\"sm\" />\n            <Group position=\"right\" spacing=\"md\">\n              <Button\n                size=\"xs\"\n                color=\"gray\"\n                onClick={() => {\n                  handleEdit(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                size=\"xs\"\n                color=\"blue\"\n                onClick={() => {\n                  if (handleSaveAction) {\n                    handleSaveAction();\n                  }\n                  handleEdit(false);\n                }}\n              >\n                Save\n              </Button>\n            </Group>\n          </Popover.Dropdown>\n        </Popover>\n      </Group>\n    );\n  }\n\n  return (\n    <ActionIcon\n      variant=\"filled\"\n      color=\"gray\"\n      sx={{\n        \"&[data-disabled]\": { opacity: 0.4 },\n      }}\n      onClick={() => {\n        handleEdit(true);\n      }}\n    >\n      <Pencil size={16} />\n    </ActionIcon>\n  );\n};\n\nconst RenderModalContent = (props: any) => {\n  return <EditPackagingFormContainer />;\n};\n\nfunction PackagingContainer() {\n  const [activeFilter, setActiveFilter] = React.useState<any>(null);\n  const [modalOpen, setModalOpen] = React.useState<any>(false);\n  const [editModeActive, setEditModeActive] = React.useState(false);\n\n  const handleEdit = (bool: boolean) => {\n    setEditModeActive(bool);\n  };\n\n  return (\n    <PageWrapper\n      PageHeader={() => (\n        <RenderPageHeader\n          activeFilter={activeFilter}\n          handleRadioChange={(value: any, index: number) =>\n            setActiveFilter(index)\n          }\n        />\n      )}\n      PageAction={() => (\n        <RenderPageAction\n          handleEdit={handleEdit}\n          editModeActive={editModeActive}\n        />\n      )}\n      modalOpen={modalOpen}\n      modalTitle=\"Add a bag\"\n      onModalClose={() => setModalOpen(false)}\n      ModalContent={() => <RenderModalContent />}\n      modalSize=\"40%\"\n    >\n      <div style={{ width: \"100%\", height: \"auto\" }}>\n        <Group spacing=\"md\" grow>\n          {packagingBags.map((cat: any, index: number) => {\n            return (\n              <SectionCard\n                key={index}\n                withBorder\n                radius=\"md\"\n                p=\"lg\"\n                component=\"a\"\n              >\n                <Group position=\"apart\">\n                  <Title order={3}>{cat.name}</Title>\n\n                  {editModeActive && (\n                    <ActionIcon\n                      variant=\"light\"\n                      color=\"blue\"\n                      sx={{\n                        \"&[data-disabled]\": { opacity: 0.4 },\n                      }}\n                      onClick={() => {\n                        setModalOpen(true);\n                      }}\n                    >\n                      <Plus size={14} />\n                    </ActionIcon>\n                  )}\n                </Group>\n                <Space h=\"xl\" />\n                <ScrollArea\n                  scrollbarSize={2}\n                  style={{ maxHeight: 380, height: 360 }}\n                >\n                  <List type=\"ordered\" spacing=\"lg\">\n                    {cat.list.map((d: any, i: number) => (\n                      <Box\n                        key={i}\n                        sx={(theme) => ({\n                          display: \"block\",\n                          backgroundColor:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[6]\n                              : \"#fff\",\n                          color:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[4]\n                              : theme.colors.dark[7],\n                          textAlign: \"left\",\n                          padding: theme.spacing.md,\n                          borderRadius: theme.radius.md,\n                          cursor: \"default\",\n\n                          \"&:hover\": {\n                            backgroundColor:\n                              theme.colorScheme === \"dark\"\n                                ? theme.colors.dark[5]\n                                : theme.colors.gray[1],\n                          },\n                        })}\n                      >\n                        <List.Item>\n                          {d.name} -{\" \"}\n                          <span style={{ fontWeight: \"600\" }}>{d.weight}</span>\n                        </List.Item>\n                      </Box>\n                    ))}\n                  </List>\n                </ScrollArea>\n              </SectionCard>\n            );\n          })}\n        </Group>\n      </div>\n    </PageWrapper>\n  );\n}\n\nexport default PackagingContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Playground/index.tsx",["165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],[],"import React, { useEffect } from \"react\";\nimport {\n  SimpleGrid,\n  Box,\n  ActionIcon,\n  Group,\n  Popover,\n  Text,\n  Button,\n  Space,\n  Title,\n  Badge,\n  Card as SectionCard,\n  List,\n  ScrollArea,\n} from \"@mantine/core\";\nimport { Pencil, X, Check, PlayerPlay } from \"tabler-icons-react\";\n\nimport PageWrapper from \"../../components/Wrappers/PageWrapper\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\n\nimport EceForm from \"./ECForm\";\n\nimport { packagingBags } from \"../../constants/var.constants\";\n\nconst RenderPageHeader = (props: any) => {\n  const activeFilter = props.activeFilter;\n  const handleRadioChange = props.handleRadioChange;\n\n  return <PageHeader title=\"Export Costing\" />;\n};\n\nconst RenderPageAction = (props: any) => {\n  const handleEdit = props.handleEdit;\n\n  return (\n    <ActionIcon\n      variant=\"filled\"\n      color=\"gray\"\n      sx={{\n        \"&[data-disabled]\": { opacity: 0.4 },\n      }}\n      onClick={() => {\n        handleEdit(true);\n      }}\n    >\n      <PlayerPlay size={16} />\n    </ActionIcon>\n  );\n};\n\nfunction PlaygroundContainer() {\n  const [activeFilter, setActiveFilter] = React.useState<any>(null);\n  const [modalOpen, setModalOpen] = React.useState<any>(false);\n  const [editModeActive, setEditModeActive] = React.useState(false);\n\n  const handleEdit = (bool: boolean) => {\n    setEditModeActive(bool);\n  };\n\n  return (\n    <PageWrapper\n      PageHeader={() => (\n        <RenderPageHeader\n          activeFilter={activeFilter}\n          handleRadioChange={(value: any, index: number) =>\n            setActiveFilter(index)\n          }\n        />\n      )}\n      PageAction={() => (\n        <RenderPageAction\n          handleEdit={handleEdit}\n          editModeActive={editModeActive}\n        />\n      )}\n    >\n      <div style={{ width: \"100%\", height: \"auto\" }}>\n        <EceForm />\n      </div>\n    </PageWrapper>\n  );\n}\n\nexport default PlaygroundContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/index.tsx",["186","187"],[],"import React from \"react\";\nimport {\n  SimpleGrid,\n  Box,\n  ActionIcon,\n  Group,\n  Popover,\n  Text,\n  Button,\n  Space,\n  Title,\n  Badge,\n  Card as SectionCard,\n  List,\n  ScrollArea,\n} from \"@mantine/core\";\nimport { Pencil, X, Check } from \"tabler-icons-react\";\n\nimport EditProductsContainer from \"./EditProducts/EditProducts\";\n\nimport PageWrapper from \"../../components/Wrappers/PageWrapper\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\n\nimport { riceCategory } from \"../../constants/var.constants\";\n\nconst RenderPageHeader = (props: any) => {\n  const activeFilter = props.activeFilter;\n  const handleRadioChange = props.handleRadioChange;\n\n  return (\n    <PageHeader\n      title=\"Manage Products\"\n      breadcrumbs={[\n        { title: \"Products\", href: \"/admin/dashboard/products\" },\n        { title: \"Manage\", href: \"#\" },\n      ]}\n    />\n  );\n};\n\nconst RenderPageAction = (props: any) => {\n  const handleSaveAction = props.handleSaveAction;\n  const handleEditAction = props.handleEditAction;\n  const editModeActive = props.editModeActive;\n\n  if (editModeActive) {\n    return (\n      <Group position=\"right\" spacing=\"md\">\n        <ActionIcon\n          variant=\"filled\"\n          color=\"gray\"\n          sx={{\n            \"&[data-disabled]\": { opacity: 0.4 },\n          }}\n          onClick={() => handleEditAction(false)}\n        >\n          <X size={16} />\n        </ActionIcon>\n\n        <Popover\n          width={250}\n          trapFocus\n          position=\"bottom-end\"\n          withArrow\n          shadow=\"md\"\n        >\n          <Popover.Target>\n            <ActionIcon\n              variant=\"filled\"\n              color=\"blue\"\n              sx={{\n                \"&[data-disabled]\": { opacity: 0.4 },\n              }}\n            >\n              <Check size={16} />\n            </ActionIcon>\n          </Popover.Target>\n          <Popover.Dropdown\n            sx={(theme) => ({\n              background:\n                theme.colorScheme === \"dark\"\n                  ? theme.colors.dark[7]\n                  : theme.white,\n            })}\n          >\n            <Text size=\"sm\">Are you sure you want to save the changes</Text>\n            <Space h=\"sm\" />\n            <Group position=\"right\" spacing=\"md\">\n              <Button\n                size=\"xs\"\n                color=\"gray\"\n                onClick={() => handleEditAction(false)}\n              >\n                Cancel\n              </Button>\n              <Button\n                size=\"xs\"\n                color=\"blue\"\n                onClick={() => {\n                  if (handleSaveAction) {\n                    handleSaveAction();\n                  }\n                  handleEditAction(false);\n                }}\n              >\n                Save\n              </Button>\n            </Group>\n          </Popover.Dropdown>\n        </Popover>\n      </Group>\n    );\n  }\n\n  return (\n    <ActionIcon\n      variant=\"filled\"\n      color=\"gray\"\n      sx={{\n        \"&[data-disabled]\": { opacity: 0.4 },\n      }}\n      onClick={() => handleEditAction(true)}\n    >\n      <Pencil size={16} />\n    </ActionIcon>\n  );\n};\n\nfunction ManageProductsContainer() {\n  const [activeFilter, setActiveFilter] = React.useState<any>(null);\n  const [modalOpen, setModalOpen] = React.useState<any>(false);\n  const [editModeActive, setEditModeActive] = React.useState<boolean>(false);\n  const [modalType, setModalType] = React.useState<string>(\"edit\");\n\n  const handleEditAction = (bool: boolean) => {\n    setEditModeActive(() => bool);\n    setModalType(\"edit\");\n  };\n\n  const handleEditToUpdateAction = () => {\n    setModalType(\"update\");\n    setModalOpen(true);\n  };\n\n  if (editModeActive) {\n    return (\n      <EditProductsContainer\n        editModeActive={editModeActive}\n        handleEditAction={(bool: boolean) => setEditModeActive(() => bool)}\n        modalType={modalType}\n        modalOpen={modalOpen}\n        handleEditToUpdateAction={handleEditToUpdateAction}\n      />\n    );\n  }\n\n  return (\n    <PageWrapper\n      PageHeader={() => (\n        <RenderPageHeader\n          activeFilter={activeFilter}\n          handleRadioChange={(value: any, index: number) =>\n            setActiveFilter(index)\n          }\n        />\n      )}\n      PageAction={() => (\n        <RenderPageAction\n          handleActionClick={() => setModalOpen(true)}\n          handleEditAction={handleEditAction}\n          editModeActive={editModeActive}\n        />\n      )}\n    >\n      <Box\n        sx={(theme) => ({\n          display: \"block\",\n          backgroundColor:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[6]\n              : theme.colors.gray[1],\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[4]\n              : theme.colors.dark[7],\n          textAlign: \"center\",\n          padding: theme.spacing.xl,\n          borderRadius: theme.radius.md,\n          cursor: \"default\",\n        })}\n      >\n        <Group position=\"apart\">\n          <Title order={1}>Rice</Title>\n          <Badge size=\"lg\" color=\"green\" variant=\"light\">\n            Live\n          </Badge>\n        </Group>\n      </Box>\n\n      <Space h=\"lg\" />\n\n      <SimpleGrid cols={2}>\n        {riceCategory.map((cat: any, index: number) => {\n          return (\n            <SectionCard\n              key={index}\n              withBorder\n              radius=\"md\"\n              p=\"lg\"\n              component=\"a\"\n            >\n              <Title order={3}>{cat.name}</Title>\n              <Space h=\"xl\" />\n              <ScrollArea\n                scrollbarSize={2}\n                style={{ maxHeight: 380, height: 360 }}\n              >\n                <List type=\"ordered\" spacing=\"lg\">\n                  {cat.list.map((d: any, i: number) => (\n                    <Box\n                      key={i}\n                      sx={(theme) => ({\n                        display: \"block\",\n                        backgroundColor:\n                          theme.colorScheme === \"dark\"\n                            ? theme.colors.dark[6]\n                            : \"#fff\",\n                        color:\n                          theme.colorScheme === \"dark\"\n                            ? theme.colors.dark[4]\n                            : theme.colors.dark[7],\n                        textAlign: \"left\",\n                        padding: theme.spacing.md,\n                        borderRadius: theme.radius.md,\n                        cursor: \"default\",\n\n                        \"&:hover\": {\n                          backgroundColor:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[5]\n                              : theme.colors.gray[1],\n                        },\n                      })}\n                    >\n                      <List.Item>{d.name}</List.Item>\n                    </Box>\n                  ))}\n                </List>\n              </ScrollArea>\n            </SectionCard>\n          );\n        })}\n      </SimpleGrid>\n    </PageWrapper>\n  );\n}\n\nexport default ManageProductsContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Locations/index.tsx",["188","189","190","191"],[],"import React from \"react\";\nimport {\n  SimpleGrid,\n  Box,\n  ActionIcon,\n  Group,\n  Popover,\n  Text,\n  Button,\n  Space,\n  Title,\n  Badge,\n  Card as SectionCard,\n  List,\n  ScrollArea,\n} from \"@mantine/core\";\nimport { Pencil, X, Check, Plus } from \"tabler-icons-react\";\n\nimport PageWrapper from \"../../components/Wrappers/PageWrapper\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\n\nimport EditLocationFormContainer from \"./EditLocationForm\";\n\nimport { locationCat } from \"../../constants/var.constants\";\n\nconst RenderPageHeader = (props: any) => {\n  const activeFilter = props.activeFilter;\n  const handleRadioChange = props.handleRadioChange;\n\n  return <PageHeader title=\"Manage Locations\" />;\n};\n\nconst RenderPageAction = (props: any) => {\n  const handleSaveAction = props.handleSaveAction;\n  const handleEdit = props.handleEdit;\n  const editModeActive = props.editModeActive || false;\n\n  if (editModeActive) {\n    return (\n      <Group position=\"right\" spacing=\"md\">\n        <ActionIcon\n          variant=\"filled\"\n          color=\"gray\"\n          sx={{\n            \"&[data-disabled]\": { opacity: 0.4 },\n          }}\n          onClick={() => handleEdit(false)}\n        >\n          <X size={16} />\n        </ActionIcon>\n\n        <Popover\n          width={250}\n          trapFocus\n          position=\"bottom-end\"\n          withArrow\n          shadow=\"lg\"\n        >\n          <Popover.Target>\n            <ActionIcon\n              variant=\"filled\"\n              color=\"blue\"\n              sx={{\n                \"&[data-disabled]\": { opacity: 0.4 },\n              }}\n            >\n              <Check size={16} />\n            </ActionIcon>\n          </Popover.Target>\n          <Popover.Dropdown\n            sx={(theme) => ({\n              background:\n                theme.colorScheme === \"dark\"\n                  ? theme.colors.dark[7]\n                  : theme.white,\n            })}\n          >\n            <Text size=\"sm\">Are you sure you want to save the changes</Text>\n            <Space h=\"sm\" />\n            <Group position=\"right\" spacing=\"md\">\n              <Button size=\"xs\" color=\"gray\" onClick={() => handleEdit(false)}>\n                Cancel\n              </Button>\n              <Button\n                size=\"xs\"\n                color=\"blue\"\n                onClick={() => {\n                  if (handleSaveAction) {\n                    handleSaveAction();\n                  }\n                  handleEdit(false);\n                }}\n              >\n                Save\n              </Button>\n            </Group>\n          </Popover.Dropdown>\n        </Popover>\n      </Group>\n    );\n  }\n\n  return (\n    <ActionIcon\n      variant=\"filled\"\n      color=\"gray\"\n      sx={{\n        \"&[data-disabled]\": { opacity: 0.4 },\n      }}\n      onClick={() => handleEdit(true)}\n    >\n      <Pencil size={16} />\n    </ActionIcon>\n  );\n};\n\nconst RenderModalContent = (props: any) => {\n  return <EditLocationFormContainer />;\n};\n\nfunction LocationsContainer() {\n  const [activeFilter, setActiveFilter] = React.useState<any>(null);\n  const [modalOpen, setModalOpen] = React.useState<any>(false);\n  const [editModeActive, setEditModeActive] = React.useState(false);\n\n  const handleEdit = (bool: boolean) => {\n    setEditModeActive(bool);\n  };\n\n  return (\n    <PageWrapper\n      PageHeader={() => (\n        <RenderPageHeader\n          activeFilter={activeFilter}\n          handleRadioChange={(value: any, index: number) =>\n            setActiveFilter(index)\n          }\n        />\n      )}\n      PageAction={() => (\n        <RenderPageAction\n          handleActionClick={() => setModalOpen(true)}\n          handleEdit={handleEdit}\n          editModeActive={editModeActive}\n        />\n      )}\n      modalOpen={modalOpen}\n      modalTitle=\"Add a location\"\n      onModalClose={() => setModalOpen(false)}\n      ModalContent={() => <RenderModalContent />}\n      modalSize=\"40%\"\n    >\n      <div style={{ width: \"100%\", height: \"auto\" }}>\n        <Group spacing=\"md\" grow>\n          {locationCat.map((cat: any, index: number) => {\n            return (\n              <SectionCard\n                key={index}\n                withBorder\n                radius=\"md\"\n                p=\"lg\"\n                component=\"a\"\n              >\n                <Group position=\"apart\">\n                  <Title order={3}>{cat.name}</Title>\n\n                  {editModeActive && (\n                    <ActionIcon\n                      variant=\"light\"\n                      color=\"blue\"\n                      sx={{\n                        \"&[data-disabled]\": { opacity: 0.4 },\n                      }}\n                      onClick={() => {\n                        setModalOpen(true);\n                      }}\n                    >\n                      <Plus size={14} />\n                    </ActionIcon>\n                  )}\n                </Group>\n                <Space h=\"xl\" />\n                <ScrollArea\n                  scrollbarSize={2}\n                  style={{ maxHeight: 380, height: 360 }}\n                >\n                  <List type=\"ordered\" spacing=\"lg\">\n                    {cat.list.map((d: any, i: number) => (\n                      <Box\n                        key={i}\n                        sx={(theme) => ({\n                          display: \"block\",\n                          backgroundColor:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[6]\n                              : \"#fff\",\n                          color:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[4]\n                              : theme.colors.dark[7],\n                          textAlign: \"left\",\n                          padding: theme.spacing.md,\n                          borderRadius: theme.radius.md,\n                          cursor: \"default\",\n\n                          \"&:hover\": {\n                            backgroundColor:\n                              theme.colorScheme === \"dark\"\n                                ? theme.colors.dark[5]\n                                : theme.colors.gray[1],\n                          },\n                        })}\n                      >\n                        <List.Item>{d.name}</List.Item>\n                      </Box>\n                    ))}\n                  </List>\n                </ScrollArea>\n              </SectionCard>\n            );\n          })}\n        </Group>\n      </div>\n    </PageWrapper>\n  );\n}\n\nexport default LocationsContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/header.constants.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/sideNavBar.constants.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/header.style.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/sideNavBar.style.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/var.constants.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Products/AddProductForm.tsx",["192","193","194"],[],"import React, { useState } from \"react\";\nimport { Button, TextInput, Space, ActionIcon, Group } from \"@mantine/core\";\nimport { Plus, Minus, Check } from \"tabler-icons-react\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { arrayBuffer } from \"stream/consumers\";\n\nfunction AddProductForm(props: any) {\n  const [categoriesValue, setCategoriesValue] = useState(\"\");\n  const [catUpdateValue, setCatUpdateValue] = useState(\"\");\n  const [categoriesList, setCategoriesList] = useState([]);\n\n\n  const [allValue ,setAllValue]=useState({});\n\n  const form = useForm({\n    clearInputErrorOnChange: true,\n    initialValues: {\n      name: \"\",\n      imageURL: \"\",\n      categoriesList: \"\",\n    },\n\n    validate: {\n      name: (value) =>\n        value.length < 2 ? \"Name must have at least 2 letters\" : null,\n      imageURL: (value) =>\n        value.length === 0\n          ? null\n          : /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/.test(\n              value\n            )\n          ? null\n          : \"Invalid URL\",\n    },\n  });\n  const handleClick: any = () => {\n    const arr: any = [...categoriesList];\n    arr.push(categoriesValue);\n    console.log(arr);\n    setCategoriesList(arr);\n  };\n\n  const handleError = (errors: typeof form.errors) => {\n    if (errors.name) {\n      showNotification({ message: \"Please fill name field\", color: \"red\" });\n    }\n  };\n\n  const handleUpdate = (index: number) => {\n    const arr: any = [...categoriesList];\n    arr[index] = catUpdateValue;\n    \n\n    setCategoriesList(arr);\n\n    console.log(arr);\n  };\n\n  const handleDeleteItem = (index: number) => {\n    const arr: any = [...categoriesList];\n\n    // logic to delete an item starts\n    if (index > -1) {\n      arr.splice(index, 1);\n    }\n\n\n    // logic to delete an item end\n\n    setCategoriesList(arr);\n    console.log(arr);\n  };\n\n  const handleSubmit = (values: typeof form.values) => {\n    // console.log(values);\n    \n   const arr:any =[];\n   arr.push(values);\n   console.log(arr);\n   setAllValue(arr);\n    \n\n  };\n\n  return (\n    <form onSubmit={form.onSubmit(handleSubmit, handleError)}>\n      <TextInput\n        required\n        label=\"Product name\"\n        placeholder=\"eg. Rice\"\n        {...form.getInputProps(\"name\")}\n      />\n\n      <Space h=\"sm\" />\n\n      <TextInput\n        label=\"Image Link\"\n        placeholder=\"eg. https://image-url.com/example-image.png\"\n        {...form.getInputProps(\"imageURL\")}\n      />\n\n      <Space h=\"sm\" />\n\n      {categoriesList.map((k, i) => {\n        return (\n          <Group spacing=\"md\">\n            <TextInput\n              defaultValue={k}\n              size=\"md\"\n              onChange={(e: any) => setCatUpdateValue(e.target.value)}\n              name={\"cat_update\"}\n            />\n            <Group spacing=\"md\" position=\"right\">\n              <ActionIcon variant=\"filled\" onClick={() => handleDeleteItem(i)}>\n                <Minus size={20} />\n              </ActionIcon>\n              <ActionIcon\n                variant=\"filled\"\n                disabled={false}\n                onClick={() => handleUpdate(i)}\n              >\n                <Check size={19} />\n              </ActionIcon>\n            </Group>\n          </Group>\n        );\n      })}\n\n      <TextInput\n        label=\"Categories\"\n        onChange={(event) => {\n          console.log(event.target.value);\n          setCategoriesValue(event.target.value);\n        }}\n        placeholder=\"eg. Categories\"\n      />\n\n      <Button onClick={handleClick}>+</Button>\n\n      <Space h=\"lg\" />\n\n      <Group position=\"right\" mt=\"md\">\n        <Button type=\"submit\" leftIcon={<Plus size={14} />}>\n          Add\n        </Button>\n      </Group>\n    </form>\n  );\n}\n\nexport default AddProductForm;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Wrappers/PageWrapper.tsx",["195"],[],"import React from \"react\";\nimport { Container, Modal, Grid, useMantineTheme } from \"@mantine/core\";\nimport { useStyles } from \"../../styles/components/pageWrapper.style\";\n\nconst PageWrapper = (props: any) => {\n  const { classes } = useStyles();\n\n  const theme = useMantineTheme();\n\n  const children = props.children;\n\n  const PageHeader = props.PageHeader;\n  const PageAction = props.PageAction;\n\n  const modalTitle = props.modalTitle;\n  const ModalContent = props.ModalContent;\n  const onModalClose = props.onModalClose;\n  const modalOpen = props.modalOpen;\n  const modalSize = props.modalSize || \"sm\";\n\n  return (\n    <Container>\n      <Grid gutter=\"xl\">\n        <Grid.Col span={12} className={classes.grid}>\n          <Grid justify=\"space-between\" align=\"flex-end\">\n            <Grid.Col sm={12} md={12} lg={3}>\n              <PageHeader />\n            </Grid.Col>\n            <Grid.Col\n              sm={12}\n              md={12}\n              lg={9}\n              style={{\n                width: \"100%\",\n                justifyContent: \"flex-end\",\n                display: \"inline-flex\",\n              }}\n            >\n              <PageAction />\n            </Grid.Col>\n          </Grid>\n        </Grid.Col>\n        <Grid.Col span={12}>{children}</Grid.Col>\n      </Grid>\n\n      {PageAction && modalOpen !== undefined && (\n        <Modal\n          size={modalSize}\n          centered\n          opened={modalOpen}\n          onClose={onModalClose}\n          title={modalTitle}\n        >\n          <ModalContent />\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default PageWrapper;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/PageHeader/PageHeader.tsx",["196"],[],"import React from \"react\";\n\nimport {\n  RadioProps,\n  Radio,\n  Text,\n  Breadcrumbs,\n  Anchor,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nimport { useStyles } from \"../../styles/components/pageHeader.style\";\n\ninterface Props {\n  title?: string;\n  label?: string;\n  radioOptions?: any;\n  handleRadioChange?: any;\n  activeFilter?: string | number;\n  breadcrumbs?: any;\n}\n\nconst PageHeader: React.FC<Props> = ({\n  title,\n  label,\n  radioOptions,\n  handleRadioChange,\n  activeFilter,\n  breadcrumbs = [],\n}) => {\n  const { classes } = useStyles();\n  const theme = useMantineTheme();\n\n  const itemsForBreadcrumbs = breadcrumbs.map((item: any, index: number) => (\n    <Anchor href={item.href} key={index}>\n      {item.title}\n    </Anchor>\n  ));\n\n  return (\n    <div>\n      <Text size=\"xl\" weight=\"bold\" color=\"gray\">\n        {title}\n      </Text>\n      {label && (\n        <Text size=\"xs\" weight=\"normal\" color={theme.colors.gray[6]}>\n          {label}\n        </Text>\n      )}\n\n      {radioOptions && (\n        <div className={classes.radioWrapper}>\n          <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\n            {radioOptions.length > 0 &&\n              radioOptions.map((opt: any, index: number) => {\n                return (\n                  <Radio\n                    key={index}\n                    checked={index === activeFilter ? true : false}\n                    value={opt.value}\n                    label={opt.label}\n                    size=\"xs\"\n                    color=\"blue\"\n                    onChange={(value) => {\n                      handleRadioChange(value, index);\n                    }}\n                    style={{\n                      marginLeft: index !== 0 ? 12 : 0,\n                    }}\n                  />\n                );\n              })}\n          </div>\n        </div>\n      )}\n\n      {breadcrumbs && (\n        <div className={classes.breadcrumbWrapper}>\n          <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\n            <Breadcrumbs>{itemsForBreadcrumbs}</Breadcrumbs>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PageHeader;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/components/Card/Card.tsx",["197","198","199"],[],"import React from \"react\";\n\nimport {\n  Card as CardComponent,\n  Image,\n  Text,\n  Badge,\n  Button,\n  Group,\n  useMantineTheme,\n} from \"@mantine/core\";\n\nimport { useStyles } from \"../../styles/components/header.style\";\n\ninterface Props {\n  title: string;\n  status?: string;\n  onClickAction?: any;\n}\n\nconst Card: React.FC<Props> = ({ title, status, onClickAction }) => {\n  const { classes } = useStyles();\n  const theme = useMantineTheme();\n\n  return (\n    <CardComponent\n      shadow=\"sm\"\n      p=\"lg\"\n      radius=\"md\"\n      component=\"a\"\n      style={{ cursor: onClickAction ? \"pointer\" : \"default\" }}\n      withBorder\n      onClick={onClickAction ? onClickAction : () => null}\n    >\n      <CardComponent.Section>\n        <Image\n          src=\"https://images.unsplash.com/photo-1592997572594-34be01bc36c7?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\"\n          height={160}\n          alt=\"Norway\"\n        />\n      </CardComponent.Section>\n\n      <Group position=\"apart\" mt=\"md\" mb=\"xs\">\n        <Text weight={500}>{title}</Text>\n        {status && (\n          <Badge color=\"green\" variant=\"light\">\n            {status}\n          </Badge>\n        )}\n      </Group>\n    </CardComponent>\n  );\n};\n\nexport default Card;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/EditProducts/EditProducts.tsx",["200","201","202"],[],"import React from \"react\";\nimport {\n  SimpleGrid,\n  Box,\n  ActionIcon,\n  Group,\n  Popover,\n  Text,\n  Button,\n  Select,\n  Space,\n  Title,\n  Badge,\n  Card as SectionCard,\n  List,\n  ScrollArea,\n} from \"@mantine/core\";\nimport { Pencil, X, Check, Plus } from \"tabler-icons-react\";\n\nimport PageWrapper from \"../../../components/Wrappers/PageWrapper\";\nimport PageHeader from \"../../../components/PageHeader/PageHeader\";\n\nimport EditProductForm from \"./EditProductsForm\";\n\nimport { riceCategory } from \"../../../constants/var.constants\";\n\nconst RenderPageHeader = (props: any) => {\n  const activeFilter = props.activeFilter;\n  const handleRadioChange = props.handleRadioChange;\n\n  return (\n    <PageHeader\n      title=\"Manage Products\"\n      breadcrumbs={[\n        { title: \"Products\", href: \"/admin/dashboard/products\" },\n        { title: \"Manage\", href: \"#\" },\n      ]}\n    />\n  );\n};\n\nconst RenderPageAction = (props: any) => {\n  const handleSaveAction = props.handleSaveAction;\n  const handleEditAction = props.handleEditAction;\n  const editModeActive = props.editModeActive;\n\n  if (editModeActive) {\n    return (\n      <Group position=\"right\" spacing=\"md\">\n        <ActionIcon\n          variant=\"filled\"\n          color=\"gray\"\n          sx={{\n            \"&[data-disabled]\": { opacity: 0.4 },\n          }}\n          onClick={() => {\n            console.log(\"here\");\n            handleEditAction(false);\n          }}\n        >\n          <X size={16} />\n        </ActionIcon>\n\n        <Popover\n          width={250}\n          trapFocus\n          position=\"bottom-end\"\n          withArrow\n          shadow=\"md\"\n        >\n          <Popover.Target>\n            <ActionIcon\n              variant=\"filled\"\n              color=\"blue\"\n              sx={{\n                \"&[data-disabled]\": { opacity: 0.4 },\n              }}\n            >\n              <Check size={16} />\n            </ActionIcon>\n          </Popover.Target>\n          <Popover.Dropdown\n            sx={(theme) => ({\n              background:\n                theme.colorScheme === \"dark\"\n                  ? theme.colors.dark[7]\n                  : theme.white,\n            })}\n          >\n            <Text size=\"sm\">Are you sure you want to save the changes</Text>\n            <Space h=\"sm\" />\n            <Group position=\"right\" spacing=\"md\">\n              <Button\n                size=\"xs\"\n                color=\"gray\"\n                onClick={() => {\n                  handleEditAction(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                size=\"xs\"\n                color=\"blue\"\n                onClick={() => {\n                  if (handleSaveAction) {\n                    handleSaveAction();\n                  }\n                  handleEditAction(false);\n                }}\n              >\n                Save\n              </Button>\n            </Group>\n          </Popover.Dropdown>\n        </Popover>\n      </Group>\n    );\n  }\n\n  return (\n    <ActionIcon\n      variant=\"filled\"\n      color=\"gray\"\n      sx={{\n        \"&[data-disabled]\": { opacity: 0.4 },\n      }}\n      onClick={() => handleEditAction(true)}\n    >\n      <Pencil size={16} />\n    </ActionIcon>\n  );\n};\n\nconst RenderModalContent = (props: any) => {\n  return <EditProductForm   />;\n};\n\nfunction EditProductsContainer(props: any) {\n  const editModeActive = props.editModeActive;\n  const handleEditAction = props.handleEditAction;\n  const modalType = props.modalType || \"edit\";\n  const handleEditToUpdateAction = props.handleEditToUpdateAction;\n\n  const [activeFilter, setActiveFilter] = React.useState<any>(null);\n  const [modalOpen, setModalOpen] = React.useState<any>(false);\n\n  const handleSave = (bool: boolean) => {\n    handleEditAction(bool);\n  };\n\n  return (\n    <PageWrapper\n      PageHeader={() => (\n        <RenderPageHeader\n          activeFilter={activeFilter}\n          handleRadioChange={(value: any, index: number) =>\n            setActiveFilter(index)\n          }\n        />\n      )}\n      PageAction={() => (\n        <RenderPageAction\n          editModeActive={editModeActive}\n          handleEditAction={handleSave}\n        />\n      )}\n      modalOpen={modalOpen}\n      modalTitle={\n        modalType === \"edit\"\n          ? \"Add Product Variant\"\n          : \"Update BASMATI 1121 SELLA\"\n      }\n      onModalClose={() => setModalOpen(false)}\n      ModalContent={() => {\n        if (modalType === \"edit\") {\n          return <RenderModalContent  />;\n        }\n\n        if (modalType === \"update\") {\n          return <RenderModalContent />;\n        }\n      }}\n      modalSize=\"70%\"\n    >\n      <Box\n        sx={(theme) => ({\n          display: \"block\",\n          backgroundColor:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[6]\n              : theme.colors.gray[1],\n          color:\n            theme.colorScheme === \"dark\"\n              ? theme.colors.dark[4]\n              : theme.colors.dark[7],\n          textAlign: \"center\",\n          padding: theme.spacing.xl,\n          borderRadius: theme.radius.md,\n          cursor: \"default\",\n        })}\n      >\n        <Group position=\"apart\">\n          <Title order={1}>Rice</Title>\n          <Group spacing=\"md\">\n            <Select\n              placeholder=\"Status\"\n              data={[\n                { value: \"live\", label: \"Live\" },\n                { value: \"disabled\", label: \"Disabled\" },\n              ]}\n            />\n            <Button\n              type=\"submit\"\n              leftIcon={<Plus size={14} />}\n              onClick={() => setModalOpen(true)}\n            >\n              Add\n            </Button>\n          </Group>\n        </Group>\n      </Box>\n\n      <Space h=\"lg\" />\n\n      <SimpleGrid cols={2}>\n        {riceCategory.map((cat: any, index: number) => {\n          return (\n            <SectionCard\n              key={index}\n              withBorder\n              radius=\"md\"\n              p=\"lg\"\n              component=\"a\"\n            >\n              <Title order={3}>{cat.name}</Title>\n              <Space h=\"xl\" />\n              <ScrollArea\n                scrollbarSize={2}\n                style={{ maxHeight: 380, height: 360 }}\n              >\n                <List type=\"ordered\" spacing=\"lg\">\n                  {cat.list.map((d: any, i: number) => (\n                    <Box\n                      key={i}\n                      sx={(theme) => ({\n                        display: \"block\",\n                        backgroundColor:\n                          theme.colorScheme === \"dark\"\n                            ? theme.colors.dark[6]\n                            : \"#fff\",\n                        color:\n                          theme.colorScheme === \"dark\"\n                            ? theme.colors.dark[4]\n                            : theme.colors.dark[7],\n                        textAlign: \"left\",\n                        padding: theme.spacing.md,\n                        borderRadius: theme.radius.md,\n                        cursor: \"default\",\n\n                        \"&:hover\": {\n                          backgroundColor:\n                            theme.colorScheme === \"dark\"\n                              ? theme.colors.dark[5]\n                              : theme.colors.gray[1],\n                        },\n                      })}\n                    >\n                      <Group position=\"apart\">\n                        <List.Item>{d.name}</List.Item>\n\n                        <ActionIcon\n                          variant=\"outline\"\n                          color=\"gray\"\n                          size=\"sm\"\n                          sx={{\n                            \"&[data-disabled]\": { opacity: 0.4 },\n                          }}\n                          onClick={() => {\n                            handleEditToUpdateAction();\n                            setModalOpen(true);\n                            console.log(d);\n                          }}\n                        >\n                          <Pencil size={12} />\n                        </ActionIcon>\n                      </Group>\n                    </Box>\n                  ))}\n                </List>\n              </ScrollArea>\n            </SectionCard>\n          );\n        })}\n      </SimpleGrid>\n    </PageWrapper>\n  );\n}\n\nexport default EditProductsContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Packaging/EditPackagingForm/index.tsx",["203","204","205"],[],"import React, { useEffect } from \"react\";\nimport {\n  Group,\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  Space,\n} from \"@mantine/core\";\nimport { ArrowRightCircle } from \"tabler-icons-react\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { packagingBags } from \"../../../constants/var.constants\";\n\nfunction EditPackagingFormContainer(props: any) {\n  const form = useForm({\n    clearInputErrorOnChange: true,\n    initialValues: {\n      name: \"\",\n      category: \"\",\n      source: \"\",\n      origin: \"\",\n      destination: \"\",\n      exMillPrice: \"\",\n      transportation: \"\",\n    },\n\n    validate: {\n      name: (value) =>\n        value.length < 2 ? \"Name must have at least 2 letters\" : null,\n    },\n  });\n\n  const handleError = (errors: typeof form.errors) => {\n    if (errors.name) {\n      showNotification({ message: \"Please fill name field\", color: \"red\" });\n    }\n  };\n\n  const handleSubmit = (values: typeof form.values) => {\n\n    let arr:any=[];\n    if (values.category === \"ppwoven\") {\n      arr = [...packagingBags[0].list];\n      arr.push(values);\n      console.log(\"arr 1\", arr);\n    } else {\n      arr = [...packagingBags[1].list];\n      arr.push(values);\n      console.log(\"arr 2\", arr);\n    }\n  };\n\n  return (\n    <form onSubmit={form.onSubmit(handleSubmit, handleError)}>\n      <Select\n        required\n        label=\"Select Bag\"\n        placeholder=\"Eg. BOPP\"\n        data={[\n          { value: \"bopp\", label: \"BOPP\" },\n          { value: \"ppwoven\", label: \"PPWOVEN\" },\n        ]}\n        {...form.getInputProps(\"category\")}\n      />\n\n      <Space h=\"md\" />\n\n      <NumberInput\n        required\n        label=\"Weight (in KG)\"\n        placeholder=\"eg. 18\"\n        {...form.getInputProps(\"name\")}\n      />\n\n      <Space h=\"md\" />\n\n      <NumberInput\n        required\n        label=\"Cost per bag\"\n        placeholder=\"eg. 18\"\n        {...form.getInputProps(\"costPerBag\")}\n      />\n\n      <Space h=\"lg\" />\n\n      <Group position=\"right\" mt=\"md\" spacing=\"md\">\n        <Button type=\"button\" color=\"blue\" variant=\"subtle\">\n          Save & add another\n        </Button>\n        <Button type=\"submit\">Add</Button>\n      </Group>\n    </form>\n  );\n}\n\nexport default EditPackagingFormContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Locations/EditLocationForm/index.tsx",["206","207","208"],[],"import React, { useEffect } from \"react\";\nimport {\n  Group,\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  Space,\n} from \"@mantine/core\";\nimport { ArrowRightCircle } from \"tabler-icons-react\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { locationCat } from \"../../../constants/var.constants\";\n\nfunction EditLocationFormContainer(props: any) {\n  const form = useForm({\n    clearInputErrorOnChange: true,\n    initialValues: {\n      name: \"\",\n      category: \"\",\n      source: \"\",\n      origin: \"\",\n      destination: \"\",\n      exMillPrice: \"\",\n      transportation: \"\",\n    },\n\n    validate: {\n      name: (value) =>\n        value.length < 2 ? \"Name must have at least 2 letters\" : null,\n    },\n  });\n\n  const handleError = (errors: typeof form.errors) => {\n    if (errors.name) {\n      showNotification({ message: \"Please fill name field\", color: \"red\" });\n    }\n  };\n\n  const handleSubmit = (values: typeof form.values) => {\n    let arr:any=[];\n    if (values.name=== \"Source Location\") {\n      arr = [...locationCat[0].list];\n      arr.push(values);\n      console.log(\"arr 1\", arr);\n    } \n    if(values.name === \"Origin Ports\") \n    {\n      arr = [...locationCat[1].list];\n      arr.push(values);\n      console.log(\"arr 1\", arr);}\n    else {\n      arr = [...locationCat[2].list];\n      arr.push(values);\n      console.log(\"arr 3\", arr);\n    }\n  };\n\n  return (\n    <form onSubmit={form.onSubmit(handleSubmit, handleError)}>\n      <Select\n        required\n        label=\"Select location type\"\n        placeholder=\"Eg. Source\"\n        data={[\n          { value: \"source\", label: \"Source\" },\n          { value: \"origin\", label: \"Origin\" },\n          { value: \"destination\", label: \"Destination\" },\n        ]}\n        {...form.getInputProps(\"category\")}\n      />\n\n      <Space h=\"md\" />\n\n      <TextInput\n        required\n        label=\"Location name\"\n        placeholder=\"eg. Kolkata\"\n        {...form.getInputProps(\"name\")}\n      />\n\n      <Space h=\"md\" />\n\n      <TextInput\n        required\n        label=\"City name\"\n        placeholder=\"eg. Kolkata\"\n        {...form.getInputProps(\"city\")}\n      />\n\n      <Space h=\"md\" />\n\n      <Select\n        required\n        label=\"Select country\"\n        placeholder=\"Eg. Source\"\n        data={[\n          { value: \"india\", label: \"India\" },\n          { value: \"singapore\", label: \"Singapore\" },\n          { value: \"vietnam\", label: \"Vietnam\" },\n        ]}\n        {...form.getInputProps(\"category\")}\n      />\n\n      <Space h=\"lg\" />\n\n      <Group position=\"right\" mt=\"md\" spacing=\"md\">\n        <Button type=\"button\" color=\"blue\" variant=\"subtle\">\n          Save & add another\n        </Button>\n        <Button type=\"submit\">Add</Button>\n      </Group>\n    </form>\n  );\n}\n\nexport default EditLocationFormContainer;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/Playground/ECForm/index.tsx",["209","210","211","212","213","214","215"],[],"import React from \"react\";\nimport {\n  Group,\n  Button,\n  TextInput,\n  NumberInput,\n  Radio,\n  Box,\n  Select,\n  Space,\n  Card,\n  Input,\n  Checkbox,\n} from \"@mantine/core\";\nimport { DatePicker } from \"@mantine/dates\";\nimport { useForm } from \"@mantine/form\";\nimport {\n  eceForm,\n  AllCfsCost,\n  ALLShippingCost,\n} from \"../../../constants/eceForm.constants\";\n\nimport { Title } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\n//mr test\nconst EceForm = () => {\n  // const [total, setTotal] = React.useState([\n  //   { exmillPrice: \"\", transportationCharges: \"\" },\n  // ]);\n\n  const [count, setCount] = React.useState(5);\n  // console.log(\"count\");\n  const [countWeight, setCountWeight] = React.useState(0);\n\n  const form = useForm({\n    clearInputErrorOnChange: true,\n    initialValues: {\n      name: \"\",\n      companyName: \"\",\n      contactDetails: \"\",\n      date: \"\",\n      productDetails: \"\",\n      category: \"\",\n\n      sourcingLocation: \"\",\n      originPort: \"\",\n      destinationPort: \"\",\n\n      exMill: \"\",\n      BagsCharges: \"\",\n\n      TransportationCharges: \"\",\n      brokenPercentage: \"\",\n      CfshandlingCharges: \"\",\n\n      CraftPaper: \"\",\n      SilicaGel: \"\",\n      LoadingCharges: \"\",\n      LTransportationCharges: \"\",\n      CustomCharges: \"\",\n      PQCertificate: \"\",\n      COO: \"\",\n\n      FinanceCost: \"\",\n      InspectionCost: \"\",\n      Overheads: \"\",\n      ShippingCost: \"\",\n\n      Thc: \"\",\n      OriginalBLFee: \"\",\n      Surrender: \"\",\n      Muc: \"\",\n      Seal: \"\",\n      ConvenienceFee: \"\",\n      Others: \"\",\n\n      MarginCost: \"\",\n      Ofc: \"\",\n      InsuranceCost: \"\",\n\n      chooseOne: \"\",\n      bookingType: \"\",\n      containerWeight: \"\",\n    },\n  });\n\n  const handleError = (errors: typeof form.errors) => {\n    if (errors.name) {\n      showNotification({ message: \"Please fill name field\", color: \"red\" });\n    }\n  };\n\n  const handleSubmit = (values: typeof form.values) => {\n    console.log(\"values\", values);\n\n    let price: any = values.exMill;\n    const discount: any = values.brokenPercentage;\n    let res: any = discount / 5;\n    let factor = res - 1;\n    let discountPrice = 300 * factor;\n\n    let finalPrice = price - discountPrice;\n    console.log(\"final prices\", finalPrice);\n\n    const totalvalues: any = [\n      { exMill: finalPrice },\n      { BagsCharges: values?.BagsCharges },\n      { transportationCharges: values?.TransportationCharges },\n      { handlingCharges: values?.CfshandlingCharges },\n      { FinanceCost: values?.FinanceCost },\n      { InspectionCost: values?.InspectionCost },\n      { Overheads: values?.Overheads },\n      { ShippingCost: values?.ShippingCost },\n      { Ofc: values?.Ofc },\n      { InsuranceCost: values?.InsuranceCost },\n      { MarginCost: values?.MarginCost },\n    ];\n\n    console.log(totalvalues);\n\n    let arr: any = [];\n    console.log(arr);\n\n    totalvalues.forEach((mobile: any) => {\n      for (let key in mobile) {\n        arr.push(JSON.parse(mobile[key]));\n      }\n    });\n    console.log(\"Array\", arr);\n\n    const sum = arr.reduce(function summarize(sum: any, number: any) {\n      const updatedSum = sum + number;\n      return updatedSum;\n    }, 0);\n    console.log(\"Sum\", sum);\n  };\n  return (\n    <form onSubmit={form.onSubmit(handleSubmit, handleError)}>\n      <Card p=\"xl\">\n        {eceForm.map((k: any, i: number) => {\n          if (k.type === \"input\") {\n            return (\n              <TextInput\n                label={k.label}\n                placeholder={k.placeholder}\n                {...form.getInputProps(k.name)}\n              />\n            );\n          }\n\n          if (k.type === \"select\") {\n            return (\n              <Select\n                label={k.label}\n                placeholder={k.placeholder}\n                data={k.options}\n                {...form.getInputProps(k.name)}\n              />\n            );\n          }\n\n          if (k.type === \"date\") {\n            return (\n              <DatePicker\n                label={k.label}\n                placeholder=\"Pick date\"\n                {...form.getInputProps(k.name)}\n              />\n            );\n          }\n          if (k.type === \"radio\") {\n            return (\n              <Radio.Group label={k.label}>\n                {k &&\n                  k.options.map((d: any, i: number) => {\n                    return <Radio label={d.name} key={i} value={d.name} />;\n                  })}\n              </Radio.Group>\n            );\n          }\n\n          <Space h=\"md\" />;\n          if (k.type === \"counter\" && k.name === \"brokenPercentage\") {\n            return (\n              <Group key={i}>\n                {k.label}\n                <Button\n                  onClick={() => setCount(count - 5)}\n                  disabled={count === 0}\n                >\n                  -\n                </Button>\n                <Input >{count}</Input>\n                <Button\n                  \n                  onClick={() => setCount(count + 5)}\n                >\n                  +\n                </Button>\n              </Group>\n            );\n          }\n          if (k.type === \"counter\" && k.name === \"containerCount\") {\n            return (\n              <Group key={i}>\n                {k.label}\n                <Button\n                  onClick={() => setCountWeight(countWeight - 1)}\n                  disabled={countWeight === 0}\n                >\n                  -\n                </Button>\n\n                <Button className=\"counter \">{countWeight}</Button>\n                <Button\n                  className=\"rounded-full ring-1\"\n                  onClick={() => setCountWeight(countWeight + 1)}\n                >\n                  +\n                </Button>\n              </Group>\n            );\n          }\n        })}\n\n        <Space h=\"md\" />\n        <Button size=\"xs\" color=\"blue\" type=\"submit\">\n          Submit\n        </Button>\n      </Card>\n    </form>\n  );\n};\n\nexport default EceForm;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/pageHeader.style.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/styles/components/pageWrapper.style.tsx",[],[],"/Users/himanshudahiya/Desktop/export-costing-fe/src/containers/ManageProducts/EditProducts/EditProductsForm.tsx",["216"],[],"import React from \"react\";\nimport {\n  Group,\n  Button,\n  TextInput,\n  NumberInput,\n  Select,\n  Space,\n} from \"@mantine/core\";\nimport { Plus, ArrowRightCircle } from \"tabler-icons-react\";\nimport { useForm } from \"@mantine/form\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { riceCategory } from \"../../../constants/var.constants\";\n\nfunction EditProductForm(props: any) {\n  const form = useForm({\n    clearInputErrorOnChange: true,\n    initialValues: {\n      name: \"\",\n      category: \"\",\n      source: \"\",\n      origin: \"\",\n      destination: \"\",\n      exMillPrice: \"\",\n      transportation: \"\",\n    },\n\n    validate: {\n      name: (value) =>\n        value.length < 2 ? \"Name must have at least 2 letters\" : null,\n    },\n  });\n\n  const handleError = (errors: typeof form.errors) => {\n    if (errors.name) {\n      showNotification({ message: \"Please fill name field\", color: \"red\" });\n    }\n  };\n\n  const handleSubmit = (values: typeof form.values) => {\n    let arr: any = [];\n\n    if (values.category === \"Basmati\") {\n      arr = [...riceCategory[0].list];\n      arr.push(values);\n      console.log(\"arr 1\", arr);\n    } else {\n      arr = [...riceCategory[1].list];\n      arr.push(values);\n      console.log(\"arr 2\", arr);\n    }\n  };\n\n  return (\n    <form onSubmit={form.onSubmit(handleSubmit, handleError)}>\n      <Select\n        required\n        label=\"Select Category\"\n        placeholder=\"Eg. Non-Basmati\"\n        data={[\n          { value: \"non-basmati\", label: \"Non-Basmati\" },\n          { value: \"basmati\", label: \"Basmati\" },\n        ]}\n        {...form.getInputProps(\"category\")}\n      />\n\n      <Space h=\"md\" />\n\n      <TextInput\n        required\n        label=\"Variant name\"\n        placeholder=\"eg. 1509 Sella\"\n        {...form.getInputProps(\"name\")}\n      />\n\n      <Space h=\"md\" />\n\n      <Group spacing=\"md\" grow>\n        <Select\n          required\n          label=\"Source Location\"\n          placeholder=\"Eg. Kolkata\"\n          data={[]}\n          {...form.getInputProps(\"source\")}\n        />\n\n        <NumberInput\n          required\n          label=\"Ex-Mill Price\"\n          placeholder=\"Eg. 26500\"\n          {...form.getInputProps(\"exMillPrice\")}\n        />\n        <Select\n          required\n          label=\"Origin Port\"\n          placeholder=\"Eg. CHENNAI\"\n          data={[]}\n          {...form.getInputProps(\"origin\")}\n        />\n        <NumberInput\n          required\n          label=\"Transportation\"\n          placeholder=\"Eg. 1600\"\n          {...form.getInputProps(\"transportation\")}\n        />\n\n        <div\n          style={{\n            display: \"inline-flex\",\n            alignItems: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <ArrowRightCircle size={24} style={{ marginTop: `14%` }} />\n          <Space w=\"md\" />\n          <Select\n            required\n            label=\"Destination Port\"\n            placeholder=\"Eg. SINGAPORE\"\n            style={{\n              width: \"100%\",\n            }}\n            data={[]}\n            {...form.getInputProps(\"destination\")}\n          />\n        </div>\n      </Group>\n\n      <Space h=\"md\" />\n\n      <NumberInput\n        required\n        label=\"Ex-Mill Price (INR)\"\n        placeholder=\"Eg. 26500\"\n        {...form.getInputProps(\"exmill\")}\n      />\n\n      <Space h=\"lg\" />\n\n      <Group position=\"right\" mt=\"md\">\n        <Button type=\"submit\">Save</Button>\n      </Group>\n    </form>\n  );\n}\n\nexport default EditProductForm;\n","/Users/himanshudahiya/Desktop/export-costing-fe/src/constants/eceForm.constants.tsx",[],[],{"ruleId":"217","severity":1,"message":"218","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"221","line":3,"column":3,"nodeType":"219","messageId":"220","endLine":3,"endColumn":13},{"ruleId":"217","severity":1,"message":"222","line":12,"column":3,"nodeType":"219","messageId":"220","endLine":12,"endColumn":8},{"ruleId":"217","severity":1,"message":"223","line":27,"column":9,"nodeType":"219","messageId":"220","endLine":27,"endColumn":21},{"ruleId":"217","severity":1,"message":"224","line":28,"column":9,"nodeType":"219","messageId":"220","endLine":28,"endColumn":26},{"ruleId":"217","severity":1,"message":"218","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"221","line":3,"column":3,"nodeType":"219","messageId":"220","endLine":3,"endColumn":13},{"ruleId":"217","severity":1,"message":"225","line":4,"column":3,"nodeType":"219","messageId":"220","endLine":4,"endColumn":6},{"ruleId":"217","severity":1,"message":"226","line":6,"column":3,"nodeType":"219","messageId":"220","endLine":6,"endColumn":8},{"ruleId":"217","severity":1,"message":"227","line":7,"column":3,"nodeType":"219","messageId":"220","endLine":7,"endColumn":10},{"ruleId":"217","severity":1,"message":"228","line":8,"column":3,"nodeType":"219","messageId":"220","endLine":8,"endColumn":7},{"ruleId":"217","severity":1,"message":"229","line":9,"column":3,"nodeType":"219","messageId":"220","endLine":9,"endColumn":9},{"ruleId":"217","severity":1,"message":"230","line":10,"column":3,"nodeType":"219","messageId":"220","endLine":10,"endColumn":8},{"ruleId":"217","severity":1,"message":"231","line":11,"column":3,"nodeType":"219","messageId":"220","endLine":11,"endColumn":8},{"ruleId":"217","severity":1,"message":"222","line":12,"column":3,"nodeType":"219","messageId":"220","endLine":12,"endColumn":8},{"ruleId":"217","severity":1,"message":"232","line":13,"column":11,"nodeType":"219","messageId":"220","endLine":13,"endColumn":22},{"ruleId":"217","severity":1,"message":"233","line":14,"column":3,"nodeType":"219","messageId":"220","endLine":14,"endColumn":7},{"ruleId":"217","severity":1,"message":"234","line":15,"column":3,"nodeType":"219","messageId":"220","endLine":15,"endColumn":13},{"ruleId":"217","severity":1,"message":"235","line":17,"column":10,"nodeType":"219","messageId":"220","endLine":17,"endColumn":16},{"ruleId":"217","severity":1,"message":"236","line":17,"column":18,"nodeType":"219","messageId":"220","endLine":17,"endColumn":19},{"ruleId":"217","severity":1,"message":"237","line":17,"column":21,"nodeType":"219","messageId":"220","endLine":17,"endColumn":26},{"ruleId":"217","severity":1,"message":"238","line":24,"column":10,"nodeType":"219","messageId":"220","endLine":24,"endColumn":23},{"ruleId":"217","severity":1,"message":"223","line":27,"column":9,"nodeType":"219","messageId":"220","endLine":27,"endColumn":21},{"ruleId":"217","severity":1,"message":"224","line":28,"column":9,"nodeType":"219","messageId":"220","endLine":28,"endColumn":26},{"ruleId":"217","severity":1,"message":"239","line":54,"column":10,"nodeType":"219","messageId":"220","endLine":54,"endColumn":19},{"ruleId":"217","severity":1,"message":"240","line":54,"column":21,"nodeType":"219","messageId":"220","endLine":54,"endColumn":33},{"ruleId":"217","severity":1,"message":"223","line":27,"column":9,"nodeType":"219","messageId":"220","endLine":27,"endColumn":21},{"ruleId":"217","severity":1,"message":"224","line":28,"column":9,"nodeType":"219","messageId":"220","endLine":28,"endColumn":26},{"ruleId":"217","severity":1,"message":"221","line":3,"column":3,"nodeType":"219","messageId":"220","endLine":3,"endColumn":13},{"ruleId":"217","severity":1,"message":"222","line":12,"column":3,"nodeType":"219","messageId":"220","endLine":12,"endColumn":8},{"ruleId":"217","severity":1,"message":"223","line":27,"column":9,"nodeType":"219","messageId":"220","endLine":27,"endColumn":21},{"ruleId":"217","severity":1,"message":"224","line":28,"column":9,"nodeType":"219","messageId":"220","endLine":28,"endColumn":26},{"ruleId":"217","severity":1,"message":"241","line":6,"column":10,"nodeType":"219","messageId":"220","endLine":6,"endColumn":21},{"ruleId":"217","severity":1,"message":"242","line":14,"column":10,"nodeType":"219","messageId":"220","endLine":14,"endColumn":18},{"ruleId":"243","severity":1,"message":"244","line":30,"column":89,"nodeType":"245","messageId":"246","endLine":30,"endColumn":90,"suggestions":"247"},{"ruleId":"217","severity":1,"message":"248","line":8,"column":9,"nodeType":"219","messageId":"220","endLine":8,"endColumn":14},{"ruleId":"217","severity":1,"message":"249","line":4,"column":3,"nodeType":"219","messageId":"220","endLine":4,"endColumn":13},{"ruleId":"217","severity":1,"message":"229","line":8,"column":3,"nodeType":"219","messageId":"220","endLine":8,"endColumn":9},{"ruleId":"217","severity":1,"message":"250","line":22,"column":11,"nodeType":"219","messageId":"220","endLine":22,"endColumn":18},{"ruleId":"217","severity":1,"message":"248","line":23,"column":9,"nodeType":"219","messageId":"220","endLine":23,"endColumn":14},{"ruleId":"217","severity":1,"message":"222","line":13,"column":3,"nodeType":"219","messageId":"220","endLine":13,"endColumn":8},{"ruleId":"217","severity":1,"message":"223","line":28,"column":9,"nodeType":"219","messageId":"220","endLine":28,"endColumn":21},{"ruleId":"217","severity":1,"message":"224","line":29,"column":9,"nodeType":"219","messageId":"220","endLine":29,"endColumn":26},{"ruleId":"217","severity":1,"message":"218","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"251","line":5,"column":3,"nodeType":"219","messageId":"220","endLine":5,"endColumn":12},{"ruleId":"217","severity":1,"message":"252","line":10,"column":10,"nodeType":"219","messageId":"220","endLine":10,"endColumn":26},{"ruleId":"217","severity":1,"message":"218","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":26},{"ruleId":"217","severity":1,"message":"253","line":6,"column":3,"nodeType":"219","messageId":"220","endLine":6,"endColumn":14},{"ruleId":"217","severity":1,"message":"252","line":10,"column":10,"nodeType":"219","messageId":"220","endLine":10,"endColumn":26},{"ruleId":"217","severity":1,"message":"253","line":6,"column":3,"nodeType":"219","messageId":"220","endLine":6,"endColumn":14},{"ruleId":"217","severity":1,"message":"225","line":8,"column":3,"nodeType":"219","messageId":"220","endLine":8,"endColumn":6},{"ruleId":"217","severity":1,"message":"254","line":13,"column":3,"nodeType":"219","messageId":"220","endLine":13,"endColumn":11},{"ruleId":"217","severity":1,"message":"255","line":19,"column":3,"nodeType":"219","messageId":"220","endLine":19,"endColumn":13},{"ruleId":"217","severity":1,"message":"256","line":20,"column":3,"nodeType":"219","messageId":"220","endLine":20,"endColumn":18},{"ruleId":"217","severity":1,"message":"231","line":23,"column":10,"nodeType":"219","messageId":"220","endLine":23,"endColumn":15},{"ruleId":"257","severity":1,"message":"258","line":140,"column":42,"nodeType":"259","messageId":"260","endLine":140,"endColumn":44},{"ruleId":"217","severity":1,"message":"261","line":10,"column":10,"nodeType":"219","messageId":"220","endLine":10,"endColumn":14},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'SimpleGrid' is defined but never used.","'Badge' is defined but never used.","'activeFilter' is assigned a value but never used.","'handleRadioChange' is assigned a value but never used.","'Box' is defined but never used.","'Group' is defined but never used.","'Popover' is defined but never used.","'Text' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'Title' is defined but never used.","'SectionCard' is defined but never used.","'List' is defined but never used.","'ScrollArea' is defined but never used.","'Pencil' is defined but never used.","'X' is defined but never used.","'Check' is defined but never used.","'packagingBags' is defined but never used.","'modalOpen' is assigned a value but never used.","'setModalOpen' is assigned a value but never used.","'arrayBuffer' is defined but never used.","'allValue' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["262","263"],"'theme' is assigned a value but never used.","'RadioProps' is defined but never used.","'classes' is assigned a value but never used.","'TextInput' is defined but never used.","'ArrowRightCircle' is defined but never used.","'NumberInput' is defined but never used.","'Checkbox' is defined but never used.","'AllCfsCost' is defined but never used.","'ALLShippingCost' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Plus' is defined but never used.",{"messageId":"264","fix":"265","desc":"266"},{"messageId":"267","fix":"268","desc":"269"},"removeEscape",{"range":"270","text":"271"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"272","text":"273"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1013,1014],"",[1013,1013],"\\"]